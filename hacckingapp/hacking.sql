-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Servidor: 127.0.0.1
-- Tiempo de generación: 18-09-2022 a las 00:28:23
-- Versión del servidor: 10.4.24-MariaDB
-- Versión de PHP: 8.1.6

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de datos: `hacking`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `comandos`
--

CREATE TABLE `comandos` (
  `id_comando` int(11) NOT NULL,
  `etiquetas` varchar(300) NOT NULL,
  `comando` varchar(500) NOT NULL,
  `descripcion` varchar(500) NOT NULL,
  `detalles` varchar(1000) NOT NULL,
  `id_fase` int(11) NOT NULL,
  `id_herramienta` int(11) NOT NULL,
  `archivo` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Volcado de datos para la tabla `comandos`
--

INSERT INTO `comandos` (`id_comando`, `etiquetas`, `comando`, `descripcion`, `detalles`, `id_fase`, `id_herramienta`, `archivo`) VALUES
(2, 'nmap+escaneo de vulnerabilidades, puertos', 'bm1hcCAtc1YgIC1zY3JpcHQ9dnVsbmVycy5uc2UgMC4wLjAuMA==', 'Escaneo de vulnerabilidades si hay bloqueo de ping agregar -f', '', 4, 1, ''),
(3, 'correos+subdominios', 'dGhlSGFydmVzdGVyIC1kIGhvc3QgZG9taW5pby5vcmcgLWwgMTAgLWIgZ29vZ2xl', 'Recolectar informacion publica de un host (correos, subdominios)', '', 4, 46, ''),
(5, 'escaneo vulnerabilidades aplicaciones web', 'bmlrdG8gLWggMC4wLjAuMA==', 'escaneo de vulnerabilidades en sitios web', '', 4, 13, ''),
(6, 'sqlmap, db, inyeccion sql,', 'c3FsbWFwIC11ICJkb21pbmlvLm9yZy9qcy9zaXRlLmpzP2NhbXBvPWFkbWluIiAtLWRicw==', 'Inyeccion sql (partimos del echo de que un campo de texto permita injection SQL). Listado de bases de datos', 'I1BhcmEgZXN0ZSBhdGFxdWUgcGFydGltb3MgZGVsIGVjaG8gZGUgcXVlIHVuIGNhbXBvIGRlIHRleHRvIHBlcm1pdGEgaW5qZWN0aW9uIFNRTCANCiNsbyBjdWFsIHByb2JhbW9zIGNvbiBsb3MgY29tYW5kb3MgdGlwaWNvcyBkZSBpbmplY3Rpb24NCg0KI0VudW1lcmFtb3MgdGFibGFzIGRlIHVuYSBiYXNlIGRlIGRhdG9zDQpzcWxtYXAgLXUgImh0dHA6Ly8xMjcuMC4wLjE6OTAwMC9lbWFpbF9zZWFyY2gucGhwP3NlYXJjaD1hZG1pbiIgLUQgd2ViX2FwcCAtLXRhYmxlcw0KDQojRGVzY2FyZ2Ftb3MgdW5hIHRhYmxhDQpzcWxtYXAgLXUgImh0dHA6Ly8xMjcuMC4wLjE6OTAwMC9lbWFpbF9zZWFyY2gucGhwP3NlYXJjaD1hZG1pbiIgLUQgd2ViX2FwcCAtVCB1c2VycyAtLWR1bXANCg0KI09ic2VydmFtb3MgbGFzIGNvbHVtbmFzDQpzcWxtYXAgLXUgImh0dHA6Ly8xMjcuMC4wLjE6OTAwMC9lbWFpbF9zZWFyY2gucGhwP3NlYXJjaD1hZG1pbiIgLUQgd2ViX2FwcCAtVCB1c2VycyAtLWNvbHVtbnMNCg0KI09ic2VydmFtb3MgbG9zIHJlc3VsdGFkb3MNCmNhdCAvdG1wL3NxbG1hcCovc3FsbWFwKi50eHQNCg==', 3, 49, ''),
(7, 'sqlmap+inyeccion+cokie', 'c3FsbWFwIC11ICJodHRwczovL2RvbWluaW8ub3JnL2FwcC9zcWxpLz9pZD0xJlN1Ym1pdD1TdWJtaXQiIC0tY29va2llPSJQQVNURSBDT1BJRUQgREFUQSBIRVJFIiAtLXByb3h5IGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MSAtLWJhdGNo', 'inyección sql con cokie', 'I0VzdGUgd2FybmluZyBub3MgaW5kaWNhIGxhIHZ1bG5lcmFiaWxpZGFkDQpzcWxtYXAgaWRlbnRpZmllZCB0aGUgZm9sbG93aW5nIGluamVjdGlvbjoNCg0KI0NhbWJpYW1vcyBlbCB1c2VyYWdlbnQgbG8gb2JzZXJ2YW1vcyBkZXNkZSBaQVANCnNxbG1hcCAtdSAiaHR0cHM6Ly9kdndhLnNlYzU0Mi5vcmcvdnVsbmVyYWJpbGl0aWVzL3NxbGkvP2lkPTEmU3VibWl0PVN1Ym1pdCIgLS1jb29raWU9IkNPT0tJRSBWQUxVRSIgLS1wcm94eSBodHRwOi8vbG9jYWxob3N0OjgwODEgLS1iYXRjaCAtLXVzZXItYWdlbnQgNDINCg0KDQojT2J0ZW5lbW9zIGxhcyBiYXNlcyBkZSBkYXRvcywgcHVlZGUgc2VyIHNpbiBlbCB1c2VyYWdlbnQNCnNxbG1hcCAtdSAiaHR0cHM6Ly9kdndhLnNlYzU0Mi5vcmcvdnVsbmVyYWJpbGl0aWVzL3NxbGkvP2lkPTEmU3VibWl0PVN1Ym1pdCIgLS1jb29raWU9IkNPT0tJRSBWQUxVRSIgLS1wcm94eSBodHRwOi8vbG9jYWxob3N0OjgwODEgLS1iYXRjaCAtLXVzZXItYWdlbnQgNDIgLS1kYnMNCg0KI0Fob3JhIG1vc3RyYW1vcyBsYXMgdGFibGFzIGRlIHVuYSBiYXNlIGRlIGRhdG9zIHNlbGVjY2lvbmFkYQ0Kc3FsbWFwIC11ICJodHRwczovL2R2d2Euc2VjNTQyLm9yZy92dWxuZXJhYmlsaXRpZXMvc3FsaS8/aWQ9MSZTdWJtaXQ9U3VibWl0IiAtLWNvb2tpZT0iQ09PS0lFIFZBTFVFIiAtLXByb3h5IGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MSAtLWJhdGNoIC0tdXNlci1hZ2VudCA0MiAtRCBzcWxpIC0t', 3, 49, ''),
(8, 'pframe+analisis de malware+archivos sopechosos en un .exe', 'cGVmcmFtZSBhcmNoaXZvLmV4ZSB8IG1vcmU=', 'Analisis de archivos sospechosos en un .exe', '', 1, 50, ''),
(9, 'usuarios, permisos', 'YWRkdXNlciB1c3VhcmlvYWNyZWFy', 'Administración de usuarios\r\n#agregar usuario con grupo por default', 'I0NyZWFyIHVuIGZydXBvDQphZGRncm91cCBub21icmVncnVwbw0KDQojY2FtYmlhciBlbCBncnVwbyBkZSB1biBzdWF1cmlvDQp1c2VybW9kIC1nIGdydXBvYWxxdWVzZWFncmVnYXJhIHVzdWFyaW9hbW9kaWZpY2FyDQoNCiNDYW1iaWFyIGRlIHByb3BpZXRhcmlvIHVuIGVsZW1lbnRvDQpjaG93biBudWV2b3VzdWFyaW86bnVldm9ncnVwbyBmaWNoZXJvDQoNCiNDYW1iaWFyIGNvbnRyYXNlw7FhIGRlIHVuIHVzdWFyaW8NCnBhc3N3ZCt1c3VhcmlvYWxxdWVzZWNhbWJpYXJhY29udHJhc2XDsWENCg0KI2NhbWJpYXIgcGVybWlzbw0KY2htb2QgK3IgZmljaGVyb2FjYW1iaWFyDQojcGFyYSBxdWl0YXIgcGVybWlzbyBlcyBjb24gIi0iDQpjaG1vZCAtciBmaWNoZXJvYWNhbWJpYXINCg0KcGFyYSBjYW1iaWFyIHNvbG8gdW4gZ3J1cG8gZXMgLXUsIC1nIG8gLW8NCiNzb2xvIHF1aXRhIGxlY3R1cmEgYWwgZ3J1cG8gZGUgdXN1YXJpb3MNCmNobW9kIA0KI3NvbG8gc2UgYWdyZWdhIGVsIHBlcm1pc28gaW5kaWNhZG8sIHRvZG9zIGxvcyBkZW1hcyBzZSByZXN0YW4NCmNobW9kIHU9cg==', 2, 25, ''),
(10, 'nmap+rpcinfo+NFS', 'I25tYXAgLXNQIDAuMC4wLjAtMjU1DQojbm1hcCAtVDQgLUEgMC4wLjAuMQ==', 'escaneamos la red\r\n#Si aparece RPC o NFS sera nuestro objetivo', 'I0VudW1lcmFtb3MNCnJwY2luZm8gLXAgMTcyLjE5LjE5LjUxDQoNCiNsaXN0YW1vcyBjYXJwZXRhciBjb21wYXJ0aWRhcyBkZWwgb25qZXRpdm8NCnNob3dtb3VudA0Kc2hvd21vdW50IC1lIDE3Mi4xOS4xOS41MQ0KDQpzdWRvIG1vdW50IC10IG5mcyAxNzIuMTkuMTkuNTE6L2hvbWUgL21udCAtbyBub2xvY2sNCg0KVHlwZSBjZCAvbW50DQoNCmxzDQoNCiNQcm9iYW1vcyBzaSBwb2RlbW9zIGVsaW1pbmFyIGFyY2hpdm9zDQpybSBhZG1pbmlzdHJhdG9yL0RvY3VtZW50cy9zZWNyZXQudHh0IA==', 3, 1, ''),
(11, 'metaxploit+red externa', 'I3VzZSBhdXhpbGlhcnkvc2Nhbm5lci9wb3J0c2Nhbi90Y3ANCiNzZXQgUkhPU1RTIDE3Mi40MC4wLjMtMjANCiNzZXQgUE9SVFMgODAsNDQzLDgwMDAsODA4MA0KI3J1bg==', '#escanemos una red externa con metaexploit', '', 4, 10, ''),
(12, 'metaxploit+reconocimiento+servicios', 'I3VzZSBhdXhpbGlhcnkvc2Nhbm5lci9odHRwL2h0dHBfaGVhZGVyDQojc2V0IFJIT1NUUyAwLjAuMC4wDQojcnVu', '#Reconocimeinto http con metaexploit', '', 4, 10, ''),
(13, 'finger+79+usuarios', 'ZmluZ2VyIEAwLjAuMC4w', 'Deteccion de usuarios utilizando el protocolo finger, que regularmente correo por el puerto 79', 'I1ByaW1lcm8gaGFjZW1vcyB1biBlc2NhbmVvLCByZWd1bGFybWVudGUgZXN0ZSBzZXJ2aWNpbyBjb3JyZSBlbCBlbCBwdWVydG8gNzkNCm5tYXAgLXAgNzkgMTkyLjE2OC4wLjUwDQoNCiNFbiBjYXNvIHF1ZSBzZSBkZXRlY3RlIGVuIHNlcnZpY2UgYXBhcmVjZXLDoSBmaW5nZXINCg0KI0NvbiBlc3RlIGNvbWFuZG8gZWwgY2xpbnRlIGRldnVlbHZlIHVuYSBsaXN0YSBkZSB1c3Vhcmlvcw0KZmluZ2VyIEAxOTIuMTY4LjAuNTANCg0KI3NlbGVjY2lvbmFtb3MgdW4gdXN1YXJpbyB5IGVqZWN1dGFtb3MgZWwgc2lndWllbnRlIGNvbWFuZG8geSBvYnRlbmVtb3MgaW5mb3JtYWNpw7NuIGFkaWNpb25hbCBjb21vIGRpcmVjdG9yaW8NCmZpbmdlciBBZG1pbkAxOTIuMTY4LjAuNTANCg0KI2VuIGVzdGUgcGFzbyB0YW1iaWVuIHNlIHB1ZWRlIGVudW1lcmFyIG1hcyBpbmZvcm1hY2lvbiBjb24gdGVsbmV0LCBzaW1pbGFyIGFsIGNvbWFuZG8gYW50ZXJpb3INCnRlbG5ldCAxOTIuMTY4LjAuNTAgNzkNClkgdW4gdXN1YXJpbyAiQWRtaW4iIGVuIGVzdGUgY2Fzbw==', 4, 25, ''),
(14, 'nmap+cgbin', 'bm1hcCAtLXNjcmlwdD1odHRwLXJvYm90cy50eHQgZG9taW5pby5vcmc=', 'Observamos si hay archivos cgbin', '', 4, 1, ''),
(15, 'esteganografia, steghide, adjuntar datos a imagen', 'c3RlZ2hpZGUgZW1iZWQgLWVmIDxhcmNoaXZvVFhUPiAtY2YgPGFyY2hpdm9JbWFnZW4+', 'Adjuntar datos a una imagen', '', 5, 51, ''),
(16, 'esteganografia, extraer archivos de una imagen+ extraer datos adjuntosde una imagen', 'c3RlZ2hpZGUgZXh0cmFjdCAtc2YgPGFyY2hpdm9JbWFnZW4+', 'Extraer datos adjuntos de una imagen', '', 5, 51, ''),
(17, 'binkwalk+bin, extraccion archivos binarios', 'IGJpbndhbGsgYXJjaGl2by5iaW4=', 'extraccion de archivos de una imagen binaria', 'I1NvbG8gcGFyYSB1biB0aXBvDQpiaW53YWxrIC1EICcgcG5nIGltYWdlOiBwbmcgJyBmaXJtd2FyZS5iaW4=', 2, 52, ''),
(18, 'stegsolve+esteganografia', 'amF2YSAtamFyIHN0ZWdzb2x2ZS5qYXI=', 'Para encontrar conetenido en imagenes, cambiando los canales', 'YXJjaGl2byBqYXI=', 5, 53, ''),
(19, 'nmap+escaneo vulnerabilidades+cve+exploits', 'bm1hcCAtc1YgLS1zY3JpcHQ9dnVsbmVycy5uc2UgMC4wLjAuMA==', 'Escaneo de un host en vusca de cve asociados y exploits', '', 4, 1, ''),
(20, 'dominios, IP, archivo, malware, virus, muestras, artefactos', 'aHR0cHM6Ly93d3cudmlydXN0b3RhbC5jb20vZ3VpL2hvbWUvdXBsb2Fk', 'Analisis de urls, dominios, ip, archivos, malware, virus, artefactos\r\n', '', 1, 42, ''),
(22, 'dominios, IP, archivo, malware, virus, muestras, artefactos', 'aHR0cHM6Ly9vdHguYWxpZW52YXVsdC5jb20v', 'Analisis de dominios, url, ip, archivos, malware, virus, artefactos', '', 1, 42, ''),
(23, 'dominios, IP, archivo, malware, virus, muestras, artefactos', 'aHR0cHM6Ly9hcHAuYW55LnJ1bi8=', 'Analisis de archivos, virus, malware, ip, dominios, artefactos', '', 1, 42, ''),
(24, 'Descifrado, decodificacion', 'aHR0cHM6Ly9nY2hxLmdpdGh1Yi5pby9DeWJlckNoZWYv', 'Descifrado y decodificacion de archivos y strings', '', 6, 42, ''),
(25, 'reglas yara', 'aHR0cHM6Ly92YWxoYWxsYS5uZXh0cm9uLXN5c3RlbXMuY29tLw==', 'Muestra las reglas yara y sus coincidencia con motores de antivirus', '', 1, 42, ''),
(26, 'shodan, ip, camaras, servidores', 'aHR0cHM6Ly93d3cuc2hvZGFuLmlvL2Rhc2hib2FyZD9sYW5ndWFnZT1lbg==', 'Busqueda de dispositivos IoT, informacion de Ip, etc', '', 4, 42, ''),
(27, 'Noticias cibernoticias', 'Tm90aWNpZXJvcyBzb2JyZSBjaWJlcnNlZ3VyaWRhZA==', 'Links en descripción', 'I2h0dHBzOi8vY3liZXJuZXdzLmNvbS8NCiNodHRwczovL3d3dy5ibGVlcGluZ2NvbXB1dGVyLmNvbS8=', 7, 42, ''),
(28, 'anonimato en archivos, archivos, compartir archivos', 'Q29tcGFydGlyIGFyY2hpdm9zIGRlIGZvcm1hIGFuw7NuaW1h', 'Links en descripción', 'I2h0dHBzOi8vd3d3LmZpbGVmYWN0b3J5LmNvbS8NCiNodHRwczovL2Fub25maWxlcy5jb20vDQojaHR0cHM6Ly9kZG93bmxvYWQuY29tLw0KI2h0dHBzOi8vZ29maWxlLmlvL3dlbGNvbWUNCiNodHRwczovL3Bhc3RlYmluLmNvbS8NCiNodHRwczovL3BybnQuc2MvDQojaHR0cHM6Ly91ZmlsZS5pby8NCiNodHRwczovL2Ryb3BtZWZpbGVzLmNvbS8NCiNodHRwczovL3lvdXJmaWxlLmNjLw0KDQoNCg0KDQo=', 7, 42, ''),
(29, 'metasploit, cargar exploitdb', 'Q2FyZ2FyIGxvcyBleHBsb2l0IGRlIGxhIHBhZ2luYSBleHBsb2l0ZGIgZW4gbWV0YXNwbG9pdA==', 'Ver el metodo en detalles', 'MS4tIGVqZWN1dGFyIHNlYXJjaGVzcGxvaXQgLXUNCjIuLSBzZSBhYnJlIGxhIHJ1dGEgZW4gbGEgY2FycGV0YSBkZWwgdXN1YXJpbyBzZSBhYnJlIC5tc2Y0L21vZHVsZXMNCjMuLSBjcsOpYW5ub3MgbGEgY2FycGV0YSAiZXhwbG9pdHMiLCBlcyBkb25kZSBpcsOhbiB0b2RvcyBsb3MgZXhwbG9pdCBxdWUgaW1wb3J0ZW1vcw0KNC4tY29uICJzZWFyY2hzcGxvaXQgZXhwbG9pdGFidXNjYXIiLCBidXNjYW1vcyBlbCBleHBsb2l0IHkgbm9zIGRhcsOhIGxhIHJ1dGENCjUuLSBsYSBydXRhIGRlIG9yaWdlbiBlcyAidXNyL3NoYXJlL2V4cGxvaXRkYi9leHBsb2l0cyIuDQp5IGxhIGRlIGRlc3Rpbm8gc2ltaWxhciBwZXJvIGVuICIubXNmNC9tb2R1bGVzIg0KNi4tY3JlYW1vcyBsYXMgY2FycGV0YXMgZGUgbGEgcnV0YSBlbiBleHBsb2l0cyBkZWwgcGFzbyAzDQo3Li0gY29waWFtb3MgZWwgZXhwbG9pdA0KOC4tIGFjdHVhbGl6YW1vcyBjb24gDQo=', 419, 10, '');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `fases`
--

CREATE TABLE `fases` (
  `id_fase` int(11) NOT NULL,
  `nombre_fase` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Volcado de datos para la tabla `fases`
--

INSERT INTO `fases` (`id_fase`, `nombre_fase`) VALUES
(1, 'Reversing'),
(2, 'Forencia'),
(3, 'Explotacion'),
(4, 'Reconocimiento'),
(5, 'Esteganografía'),
(6, 'Criptografia'),
(7, 'OSINT'),
(419, 'Configuraciones');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `herramientas`
--

CREATE TABLE `herramientas` (
  `id_herramienta` int(11) NOT NULL,
  `nombre_herramienta` varchar(50) NOT NULL,
  `ayuda_herramienta` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Volcado de datos para la tabla `herramientas`
--

INSERT INTO `herramientas` (`id_herramienta`, `nombre_herramienta`, `ayuda_herramienta`) VALUES
(1, 'Nmap', '(+[no]aaflag))+retry=###\r\nNmap 7.92 ( https://nmap.org )\r\nUsage: nmap [Scan Type(s)] [Options] {target specification}\r\nTARGET SPECIFICATION:\r\n  Can pass hostnames, IP addresses, networks, etc.\r\n  Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254\r\n  -iL &amp;lt;inputfilename&amp;gt;: Input from list of hosts/networks\r\n  -iR &amp;lt;num hosts&amp;gt;: Choose random targets\r\n  --exclude &amp;lt;host1[,host2][,host3],...&amp;gt;: Exclude hosts/networks\r\n  --excludefile &amp;lt;exclude_file&amp;gt;: Exclude list from file\r\nHOST DISCOVERY:\r\n  -sL: List Scan - simply list targets to scan\r\n  -sn: Ping Scan - disable port scan\r\n  -Pn: Treat all hosts as online -- skip host discovery\r\n  -PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports\r\n  -PE/PP/PM: ICMP echo, timestamp, and netmask request discovery probes\r\n  -PO[protocol list]: IP Protocol Ping\r\n  -n/-R: Never do DNS resolution/Always resolve [default: sometimes]\r\n  --dns-servers &amp;lt;serv1[,serv2],...&amp;gt;: Specify custom DNS servers\r\n  --system-dns: Use OS&amp;#039;s DNS resolver\r\n  --traceroute: Trace hop path to each host\r\nSCAN TECHNIQUES:\r\n  -sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans\r\n  -sU: UDP Scan\r\n  -sN/sF/sX: TCP Null, FIN, and Xmas scans\r\n  --scanflags &amp;lt;flags&amp;gt;: Customize TCP scan flags\r\n  -sI &amp;lt;zombie host[:probeport]&amp;gt;: Idle scan\r\n  -sY/sZ: SCTP INIT/COOKIE-ECHO scans\r\n  -sO: IP protocol scan\r\n  -b &amp;lt;FTP relay host&amp;gt;: FTP bounce scan\r\nPORT SPECIFICATION AND SCAN ORDER:\r\n  -p &amp;lt;port ranges&amp;gt;: Only scan specified ports\r\n    Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9\r\n  --exclude-ports &amp;lt;port ranges&amp;gt;: Exclude the specified ports from scanning\r\n  -F: Fast mode - Scan fewer ports than the default scan\r\n  -r: Scan ports consecutively - don&amp;#039;t randomize\r\n  --top-ports &amp;lt;number&amp;gt;: Scan &amp;lt;number&amp;gt; most common ports\r\n  --port-ratio &amp;lt;ratio&amp;gt;: Scan ports more common than &amp;lt;ratio&amp;gt;\r\nSERVICE/VERSION DETECTION:\r\n  -sV: Probe open ports to determine service/version info\r\n  --version-intensity &amp;lt;level&amp;gt;: Set from 0 (light) to 9 (try all probes)\r\n  --version-light: Limit to most likely probes (intensity 2)\r\n  --version-all: Try every single probe (intensity 9)\r\n  --version-trace: Show detailed version scan activity (for debugging)\r\nSCRIPT SCAN:\r\n  -sC: equivalent to --script=default\r\n  --script=&amp;lt;Lua scripts&amp;gt;: &amp;lt;Lua scripts&amp;gt; is a comma separated list of\r\n           directories, script-files or script-categories\r\n  --script-args=&amp;lt;n1=v1,[n2=v2,...]&amp;gt;: provide arguments to scripts\r\n  --script-args-file=filename: provide NSE script args in a file\r\n  --script-trace: Show all data sent and received\r\n  --script-updatedb: Update the script database.\r\n  --script-help=&amp;lt;Lua scripts&amp;gt;: Show help about scripts.\r\n           &amp;lt;Lua scripts&amp;gt; is a comma-separated list of script-files or\r\n           script-categories.\r\nOS DETECTION:\r\n  -O: Enable OS detection\r\n  --osscan-limit: Limit OS detection to promising targets\r\n  --osscan-guess: Guess OS more aggressively\r\nTIMING AND PERFORMANCE:\r\n  Options which take &amp;lt;time&amp;gt; are in seconds, or append &amp;#039;ms&amp;#039; (milliseconds),\r\n  &amp;#039;s&amp;#039; (seconds), &amp;#039;m&amp;#039; (minutes), or &amp;#039;h&amp;#039; (hours) to the value (e.g. 30m).\r\n  -T&amp;lt;0-5&amp;gt;: Set timing template (higher is faster)\r\n  --min-hostgroup/max-hostgroup &amp;lt;size&amp;gt;: Parallel host scan group sizes\r\n  --min-parallelism/max-parallelism &amp;lt;numprobes&amp;gt;: Probe parallelization\r\n  --min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout &amp;lt;time&amp;gt;: Specifies\r\n      probe round trip time.\r\n  --max-retries &amp;lt;tries&amp;gt;: Caps number of port scan probe retransmissions.\r\n  --host-timeout &amp;lt;time&amp;gt;: Give up on target after this long\r\n  --scan-delay/--max-scan-delay &amp;lt;time&amp;gt;: Adjust delay between probes\r\n  --min-rate &amp;lt;number&amp;gt;: Send packets no slower than &amp;lt;number&amp;gt; per second\r\n  --max-rate &amp;lt;number&amp;gt;: Send packets no faster than &amp;lt;number&amp;gt; per second\r\nFIREWALL/IDS EVASION AND SPOOFING:\r\n  -f; --mtu &amp;lt;val&amp;gt;: fragment packets (optionally w/given MTU)\r\n  -D &amp;lt;decoy1,decoy2[,ME],...&amp;gt;: Cloak a scan with decoys\r\n  -S &amp;lt;IP_Address&amp;gt;: Spoof source address\r\n  -e &amp;lt;iface&amp;gt;: Use specified interface\r\n  -g/--source-port &amp;lt;portnum&amp;gt;: Use given port number\r\n  --proxies &amp;lt;url1,[url2],...&amp;gt;: Relay connections through HTTP/SOCKS4 proxies\r\n  --data &amp;lt;hex string&amp;gt;: Append a custom payload to sent packets\r\n  --data-string &amp;lt;string&amp;gt;: Append a custom ASCII string to sent packets\r\n  --data-length &amp;lt;num&amp;gt;: Append random data to sent packets\r\n  --ip-options &amp;lt;options&amp;gt;: Send packets with specified ip options\r\n  --ttl &amp;lt;val&amp;gt;: Set IP time-to-live field\r\n  --spoof-mac &amp;lt;mac address/prefix/vendor name&amp;gt;: Spoof your MAC address\r\n  --badsum: Send packets with a bogus TCP/UDP/SCTP checksum\r\nOUTPUT:\r\n  -oN/-oX/-oS/-oG &amp;lt;file&amp;gt;: Output scan in normal, XML, s|&amp;lt;rIpt kIddi3,\r\n     and Grepable format, respectively, to the given filename.\r\n  -oA &amp;lt;basename&amp;gt;: Output in the three major formats at once\r\n  -v: Increase verbosity level (use -vv or more for greater effect)\r\n  -d: Increase debugging level (use -dd or more for greater effect)\r\n  --reason: Display the reason a port is in a particular state\r\n  --open: Only show open (or possibly open) ports\r\n  --packet-trace: Show all packets sent and received\r\n  --iflist: Print host interfaces and routes (for debugging)\r\n  --append-output: Append to rather than clobber specified output files\r\n  --resume &amp;lt;filename&amp;gt;: Resume an aborted scan\r\n  --noninteractive: Disable runtime interactions via keyboard\r\n  --stylesheet &amp;lt;path/URL&amp;gt;: XSL stylesheet to transform XML output to HTML\r\n  --webxml: Reference stylesheet from Nmap.Org for more portable XML\r\n  --no-stylesheet: Prevent associating of XSL stylesheet w/XML output\r\nMISC:\r\n  -6: Enable IPv6 scanning\r\n  -A: Enable OS detection, version detection, script scanning, and traceroute\r\n  --datadir &amp;lt;dirname&amp;gt;: Specify custom Nmap data file location\r\n  --send-eth/--send-ip: Send using raw ethernet frames or IP packets\r\n  --privileged: Assume that the user is fully privileged\r\n  --unprivileged: Assume the user lacks raw socket privileges\r\n  -V: Print version number\r\n  -h: Print this help summary page.\r\nEXAMPLES:\r\n  nmap -v -A scanme.nmap.org\r\n  nmap -v -sn 192.168.0.0/16 10.0.0.0/8\r\n  nmap -v -iR 10000 -Pn -p 80\r\nSEE THE MAN PAGE (https://nmap.org/book/man.html) FOR MORE OPTIONS AND EXAMPLES'),
(2, 'Dig', 'Usage:  dig [@global-server] [domain] [q-type] [q-class] {q-opt}\r\n            {global-d-opt} host [@local-server] {local-d-opt}\r\n            [ host [@local-server] {local-d-opt} [...]]\r\nWhere:  domain    is in the Domain Name System\r\n        q-class  is one of (in,hs,ch,...) [default: in]\r\n        q-type   is one of (a,any,mx,ns,soa,hinfo,axfr,txt,...) [default:a]\r\n                 (Use ixfr=version for type ixfr)\r\n        q-opt    is one of:\r\n                 -4                  (use IPv4 query transport only)\r\n                 -6                  (use IPv6 query transport only)\r\n                 -b address[#port]   (bind to source address/port)\r\n                 -c class            (specify query class)\r\n                 -f filename         (batch mode)\r\n                 -k keyfile          (specify tsig key file)\r\n                 -m                  (enable memory usage debugging)\r\n                 -p port             (specify port number)\r\n                 -q name             (specify query name)\r\n                 -r                  (do not read ~/.digrc)\r\n                 -t type             (specify query type)\r\n                 -u                  (display times in usec instead of msec)\r\n                 -x dot-notation     (shortcut for reverse lookups)\r\n                 -y [hmac:]name:key  (specify named base64 tsig key)\r\n        d-opt    is of the form +keyword[=value], where keyword is:\r\n                 +[no]aaflag         (Set AA flag in query (+[no]aaflag))\r\n                 +[no]aaonly         (Set AA flag in query (+[no]aaflag))\r\n                 +[no]additional     (Control display of additional section)\r\n                 +[no]adflag         (Set AD flag in query (default on))\r\n                 +[no]all            (Set or clear all display flags)\r\n                 +[no]answer         (Control display of answer section)\r\n                 +[no]authority      (Control display of authority section)\r\n                 +[no]badcookie      (Retry BADCOOKIE responses)\r\n                 +[no]besteffort     (Try to parse even illegal messages)\r\n                 +bufsize[=###]      (Set EDNS0 Max UDP packet size)\r\n                 +[no]cdflag         (Set checking disabled flag in query)\r\n                 +[no]class          (Control display of class in records)\r\n                 +[no]cmd            (Control display of command line -\r\n                                      global option)\r\n                 +[no]comments       (Control display of packet header\r\n                                      and section name comments)\r\n                 +[no]cookie         (Add a COOKIE option to the request)\r\n                 +[no]crypto         (Control display of cryptographic\r\n                                      fields in records)\r\n                 +[no]defname        (Use search list (+[no]search))\r\n                 +[no]dns64prefix    (Get the DNS64 prefixes from ipv4only.arpa)\r\n                 +[no]dnssec         (Request DNSSEC records)\r\n                 +domain=###         (Set default domainname)\r\n                 +[no]dscp[=###]     (Set the DSCP value to ### [0..63])\r\n                 +[no]edns[=###]     (Set EDNS version) [0]\r\n                 +ednsflags=###      (Set EDNS flag bits)\r\n                 +[no]ednsnegotiation (Set EDNS version negotiation)\r\n                 +ednsopt=###[:value] (Send specified EDNS option)\r\n                 +noednsopt          (Clear list of +ednsopt options)\r\n                 +[no]expandaaaa     (Expand AAAA records)\r\n                 +[no]expire         (Request time to expire)\r\n                 +[no]fail           (Don\'t try next server on SERVFAIL)\r\n                 +[no]header-only    (Send query without a question section)\r\n                 +[no]https[=###]    (DNS-over-HTTPS mode) [/]\r\n                 +[no]https-get      (Use GET instead of default POST method\r\n                 +[no]identify       (ID responders in short answers)\r\n                 +[no]idnin          (Parse IDN names [default=on on tty])\r\n                 +[no]idnout         (Convert IDN response [default=on on tty])\r\n                 +[no]ignore         (Don\'t revert to TCP for TC responses.)\r\n                 +[no]keepalive      (Request EDNS TCP keepalive)\r\n                 +[no]keepopen       (Keep the TCP socket open between queries)\r\n                 +[no]multiline      (Print records in an expanded format)\r\n                 +ndots=###          (Set search NDOTS value)\r\n                 +[no]nsid           (Request Name Server ID)\r\n                 +[no]nssearch       (Search all authoritative nameservers)\r\n                 +[no]onesoa         (AXFR prints only one soa record)\r\n                 +[no]opcode=###     (Set the opcode of the request)\r\n                 +padding=###        (Set padding block size [0])\r\n                 +[no]qr             (Print question before sending)\r\n                 +[no]question       (Control display of question section)\r\n                 +[no]raflag         (Set RA flag in query (+[no]raflag))\r\n                 +[no]rdflag         (Recursive mode (+[no]recurse))\r\n                 +[no]recurse        (Recursive mode (+[no]rdflag))\r\n                 +retry=###          (Set number of UDP retries) [2]\r\n                 +[no]rrcomments     (Control display of per-record comments)\r\n                 +[no]search         (Set whether to use searchlist)\r\n                 +[no]short          (Display nothing except short\r\n                                      form of answers - global option)\r\n                 +[no]showbadcookie  (Show BADCOOKIE message)\r\n                 +[no]showsearch     (Search with intermediate results)\r\n                 +[no]split=##       (Split hex/base64 fields into chunks)\r\n                 +[no]stats          (Control display of statistics)\r\n                 +subnet=addr        (Set edns-client-subnet option)\r\n                 +[no]tcflag         (Set TC flag in query (+[no]tcflag))\r\n                 +[no]tcp            (TCP mode (+[no]vc))\r\n                 +timeout=###        (Set query timeout) [5]\r\n                 +[no]tls            (DNS-over-TLS mode)\r\n                 +[no]trace          (Trace delegation down from root [+dnssec])\r\n                 +tries=###          (Set number of UDP attempts) [3]\r\n                 +[no]ttlid          (Control display of ttls in records)\r\n                 +[no]ttlunits       (Display TTLs in human-readable units)\r\n                 +[no]unknownformat  (Print RDATA in RFC 3597 \"unknown\" format)\r\n                 +[no]vc             (TCP mode (+[no]tcp))\r\n                 +[no]yaml           (Present the results as YAML)\r\n                 +[no]zflag          (Set Z flag in query)\r\n        global d-opts and servers (before host name) affect all queries.\r\n        local d-opts and servers (after host name) affect only that lookup.\r\n        -h                           (print help and exit)\r\n        -v                           (print version and exit)\r\n'),
(4, 'Zap', ''),
(5, 'Wirechark', ''),
(8, 'Spiderfoot', '#Cuando marca un error de correlacion, crear la carpeta correlations en usr/share/spiderfoot/\r\n\r\nusage: sf.py [-h] [-d] [-l IP:port] [-m mod1,mod2,...] [-M] [-C scanID] [-s TARGET] [-t type1,type2,...] [-u {all,footprint,investigate,passive}] [-T] [-o {tab,csv,json}] [-H] [-n] [-r] [-S LENGTH] [-D DELIMITER] [-f]\r\n             [-F type1,type2,...] [-x] [-q] [-V] [-max-threads MAX_THREADS]\r\n\r\nSpiderFoot 4.0.0: Open Source Intelligence Automation.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -d, --debug           Enable debug output.\r\n  -l IP:port            IP and port to listen on.\r\n  -m mod1,mod2,...      Modules to enable.\r\n  -M, --modules         List available modules.\r\n  -C scanID, --correlate scanID\r\n                        Run correlation rules against a scan ID.\r\n  -s TARGET             Target for the scan.\r\n  -t type1,type2,...    Event types to collect (modules selected automatically).\r\n  -u {all,footprint,investigate,passive}\r\n                        Select modules automatically by use case\r\n  -T, --types           List available event types.\r\n  -o {tab,csv,json}     Output format. Tab is default.\r\n  -H                    Don&#039;t print field headers, just data.\r\n  -n                    Strip newlines from data.\r\n  -r                    Include the source data field in tab/csv output.\r\n  -S LENGTH             Maximum data length to display. By default, all data is shown.\r\n  -D DELIMITER          Delimiter to use for CSV output. Default is ,.\r\n  -f                    Filter out other event types that weren&#039;t requested with -t.\r\n  -F type1,type2,...    Show only a set of event types, comma-separated.\r\n  -x                    STRICT MODE. Will only enable modules that can directly consume your target, and if -t was specified only those events will be consumed by modules. This overrides -t and -m options.\r\n  -q                    Disable logging. This will also hide errors!\r\n  -V, --version         Display the version of SpiderFoot and exit.\r\n  -max-threads MAX_THREADS\r\n                        Max number of modules to run concurrently.\r\n'),
(10, 'Metasploit', 'Usage: msfconsole [options]\r\n\r\nCommon options:\r\n    -E, --environment ENVIRONMENT    Set Rails environment, defaults to RAIL_ENV environment variable or &#039;production&#039;\r\n\r\nDatabase options:\r\n    -M, --migration-path DIRECTORY   Specify a directory containing additional DB migrations\r\n    -n, --no-database                Disable database support\r\n    -y, --yaml PATH                  Specify a YAML file containing database settings\r\n\r\nFramework options:\r\n    -c FILE                          Load the specified configuration file\r\n    -v, -V, --version                Show version\r\n\r\nModule options:\r\n        --defer-module-loads         Defer module loading unless explicitly asked\r\n    -m, --module-path DIRECTORY      Load an additional module path\r\n\r\nConsole options:\r\n    -a, --ask                        Ask before exiting Metasploit or accept &#039;exit -y&#039;\r\n    -H, --history-file FILE          Save command history to the specified file\r\n    -l, --logger STRING              Specify a logger to use (StdoutWithoutTimestamps, Flatfile, Stderr, Stdout, TimestampColorlessFlatfile)\r\n        --[no-]readline\r\n    -L, --real-readline              Use the system Readline library instead of RbReadline\r\n    -o, --output FILE                Output to the specified file\r\n    -p, --plugin PLUGIN              Load a plugin on startup\r\n    -q, --quiet                      Do not print the banner on startup\r\n    -r, --resource FILE              Execute the specified resource file (- for stdin)\r\n    -x, --execute-command COMMAND    Execute the specified console commands (use ; for multiples)\r\n    -h, --help                       Show this message\r\n'),
(11, 'Strings', 'Modo de empleo: strings [opcion(es)] [fichero(s)]\r\n Muestra las cadenas imprimibles en [fichero(s)] (por defecto entrada estándar)\r\n  Las opciones son:\r\n  -a - --all                Scan the entire file, not just the data section [default]\r\n  -d --data                 Only scan the data sections in the file\r\n  -f --print-file-name      Print the name of the file before each string\r\n  -n <number>               Locate & print any sequence of at least <number>\r\n    --bytes=<number>         displayable characters.  (The default is 4).\r\n  -t --radix={o,d,x}        Print the location of the string in base 8, 10 or 16\r\n  -w --include-all-whitespace Include all whitespace as valid string characters\r\n  -o                        An alias for --radix=o\r\n  -T --target=<BFDNAME>     Specify the binary file format\r\n  -e --encoding={s,S,b,l,B,L} Select character size and endianness:\r\n                            s = 7-bit, S = 8-bit, {b,l} = 16-bit, {B,L} = 32-bit\r\n  --unicode={default|show|invalid|hex|escape|highlight}\r\n  -U {d|s|i|x|e|h}          Specify how to treat UTF-8 encoded unicode characters\r\n  -s --output-separator=<string> String used to separate strings in output.\r\n  @<file>                   Read options from <file>\r\n  -h --help                 Display this information\r\n  -v -V --version           Print the program\'s version number\r\nstrings: objetivos admitidos: elf64-x86-64 elf32-i386 elf32-iamcu elf32-x86-64 pei-i386 pe-x86-64 pei-x86-64 elf64-l1om elf64-k1om elf64-little elf64-big elf32-little elf32-big pe-bigobj-x86-64 pe-i386 srec symbolsrec verilog tekhex binary ihex plugin\r\nReportar bichos a <https://sourceware.org/bugzilla/>\r\n'),
(12, 'Recon-ng', ''),
(13, 'Nikto', 'Option host requires an argument\r\n\r\n       -config+            Use this config file\r\n       -Display+           Turn on/off display outputs\r\n       -dbcheck            check database and other key files for syntax errors\r\n       -Format+            save file (-o) format\r\n       -Help               Extended help information\r\n       -host+              target host/URL\r\n       -id+                Host authentication to use, format is id:pass or id:pass:realm\r\n       -list-plugins       List all available plugins\r\n       -output+            Write output to this file\r\n       -nossl              Disables using SSL\r\n       -no404              Disables 404 checks\r\n       -Plugins+           List of plugins to run (default: ALL)\r\n       -port+              Port to use (default 80)\r\n       -root+              Prepend root value to all requests, format is /directory\r\n       -ssl                Force ssl mode on port\r\n       -Tuning+            Scan tuning\r\n       -timeout+           Timeout for requests (default 10 seconds)\r\n       -update             Update databases and plugins from CIRT.net\r\n       -Version            Print plugin and database versions\r\n       -vhost+             Virtual host (for Host header)\r\n                + requires a value\r\n\r\n        Note: This is the short help output. Use -H for full help text.\r\n'),
(14, 'John the ripper', '');
INSERT INTO `herramientas` (`id_herramienta`, `nombre_herramienta`, `ayuda_herramienta`) VALUES
(15, 'Hashcat', 'hashcat (v6.2.5) starting in help mode\r\n\r\nUsage: hashcat [options]... hash|hashfile|hccapxfile [dictionary|mask|directory]...\r\n\r\n- [ Options ] -\r\n\r\n Options Short / Long           | Type | Description                                          | Example\r\n================================+======+======================================================+=======================\r\n -m, --hash-type                | Num  | Hash-type, references below (otherwise autodetect)   | -m 1000\r\n -a, --attack-mode              | Num  | Attack-mode, see references below                    | -a 3\r\n -V, --version                  |      | Print version                                        |\r\n -h, --help                     |      | Print help                                           |\r\n     --quiet                    |      | Suppress output                                      |\r\n     --hex-charset              |      | Assume charset is given in hex                       |\r\n     --hex-salt                 |      | Assume salt is given in hex                          |\r\n     --hex-wordlist             |      | Assume words in wordlist are given in hex            |\r\n     --force                    |      | Ignore warnings                                      |\r\n     --deprecated-check-disable |      | Enable deprecated plugins                            |\r\n     --status                   |      | Enable automatic update of the status screen         |\r\n     --status-json              |      | Enable JSON format for status output                 |\r\n     --status-timer             | Num  | Sets seconds between status screen updates to X      | --status-timer=1\r\n     --stdin-timeout-abort      | Num  | Abort if there is no input from stdin for X seconds  | --stdin-timeout-abort=300\r\n     --machine-readable         |      | Display the status view in a machine-readable format |\r\n     --keep-guessing            |      | Keep guessing the hash after it has been cracked     |\r\n     --self-test-disable        |      | Disable self-test functionality on startup           |\r\n     --loopback                 |      | Add new plains to induct directory                   |\r\n     --markov-hcstat2           | File | Specify hcstat2 file to use                          | --markov-hcstat2=my.hcstat2\r\n     --markov-disable           |      | Disables markov-chains, emulates classic brute-force |\r\n     --markov-classic           |      | Enables classic markov-chains, no per-position       |\r\n -t, --markov-threshold         | Num  | Threshold X when to stop accepting new markov-chains | -t 50\r\n     --runtime                  | Num  | Abort session after X seconds of runtime             | --runtime=10\r\n     --session                  | Str  | Define specific session name                         | --session=mysession\r\n     --restore                  |      | Restore session from --session                       |\r\n     --restore-disable          |      | Do not write restore file                            |\r\n     --restore-file-path        | File | Specific path to restore file                        | --restore-file-path=x.restore\r\n -o, --outfile                  | File | Define outfile for recovered hash                    | -o outfile.txt\r\n     --outfile-format           | Str  | Outfile format to use, separated with commas         | --outfile-format=1,3\r\n     --outfile-autohex-disable  |      | Disable the use of $HEX[] in output plains           |\r\n     --outfile-check-timer      | Num  | Sets seconds between outfile checks to X             | --outfile-check=30\r\n     --wordlist-autohex-disable |      | Disable the conversion of $HEX[] from the wordlist   |\r\n -p, --separator                | Char | Separator char for hashlists and outfile             | -p :\r\n     --stdout                   |      | Do not crack a hash, instead print candidates only   |\r\n     --show                     |      | Compare hashlist with potfile; show cracked hashes   |\r\n     --left                     |      | Compare hashlist with potfile; show uncracked hashes |\r\n     --username                 |      | Enable ignoring of usernames in hashfile             |\r\n     --remove                   |      | Enable removal of hashes once they are cracked       |\r\n     --remove-timer             | Num  | Update input hash file each X seconds                | --remove-timer=30\r\n     --potfile-disable          |      | Do not write potfile                                 |\r\n     --potfile-path             | File | Specific path to potfile                             | --potfile-path=my.pot\r\n     --encoding-from            | Code | Force internal wordlist encoding from X              | --encoding-from=iso-8859-15\r\n     --encoding-to              | Code | Force internal wordlist encoding to X                | --encoding-to=utf-32le\r\n     --debug-mode               | Num  | Defines the debug mode (hybrid only by using rules)  | --debug-mode=4\r\n     --debug-file               | File | Output file for debugging rules                      | --debug-file=good.log\r\n     --induction-dir            | Dir  | Specify the induction directory to use for loopback  | --induction=inducts\r\n     --outfile-check-dir        | Dir  | Specify the outfile directory to monitor for plains  | --outfile-check-dir=x\r\n     --logfile-disable          |      | Disable the logfile                                  |\r\n     --hccapx-message-pair      | Num  | Load only message pairs from hccapx matching X       | --hccapx-message-pair=2\r\n     --nonce-error-corrections  | Num  | The BF size range to replace AP&#039;s nonce last bytes   | --nonce-error-corrections=16\r\n     --keyboard-layout-mapping  | File | Keyboard layout mapping table for special hash-modes | --keyb=german.hckmap\r\n     --truecrypt-keyfiles       | File | Keyfiles to use, separated with commas               | --truecrypt-keyf=x.png\r\n     --veracrypt-keyfiles       | File | Keyfiles to use, separated with commas               | --veracrypt-keyf=x.txt\r\n     --veracrypt-pim-start      | Num  | VeraCrypt personal iterations multiplier start       | --veracrypt-pim-start=450\r\n     --veracrypt-pim-stop       | Num  | VeraCrypt personal iterations multiplier stop        | --veracrypt-pim-stop=500\r\n -b, --benchmark                |      | Run benchmark of selected hash-modes                 |\r\n     --benchmark-all            |      | Run benchmark of all hash-modes (requires -b)        |\r\n     --speed-only               |      | Return expected speed of the attack, then quit       |\r\n     --progress-only            |      | Return ideal progress step size and time to process  |\r\n -c, --segment-size             | Num  | Sets size in MB to cache from the wordfile to X      | -c 32\r\n     --bitmap-min               | Num  | Sets minimum bits allowed for bitmaps to X           | --bitmap-min=24\r\n     --bitmap-max               | Num  | Sets maximum bits allowed for bitmaps to X           | --bitmap-max=24\r\n     --cpu-affinity             | Str  | Locks to CPU devices, separated with commas          | --cpu-affinity=1,2,3\r\n     --hook-threads             | Num  | Sets number of threads for a hook (per compute unit) | --hook-threads=8\r\n     --hash-info                |      | Show information for each hash-mode                  |\r\n     --example-hashes           |      | Alias of --hash-info                                 |\r\n     --backend-ignore-cuda      |      | Do not try to open CUDA interface on startup         |\r\n     --backend-ignore-opencl    |      | Do not try to open OpenCL interface on startup       |\r\n -I, --backend-info             |      | Show info about detected backend API devices         | -I\r\n -d, --backend-devices          | Str  | Backend devices to use, separated with commas        | -d 1\r\n -D, --opencl-device-types      | Str  | OpenCL device-types to use, separated with commas    | -D 1\r\n -O, --optimized-kernel-enable  |      | Enable optimized kernels (limits password length)    |\r\n -M, --multiply-accel-disable   |      | Disable multiply kernel-accel with processor count   |\r\n -w, --workload-profile         | Num  | Enable a specific workload profile, see pool below   | -w 3\r\n -n, --kernel-accel             | Num  | Manual workload tuning, set outerloop step size to X | -n 64\r\n -u, --kernel-loops             | Num  | Manual workload tuning, set innerloop step size to X | -u 256\r\n -T, --kernel-threads           | Num  | Manual workload tuning, set thread count to X        | -T 64\r\n     --backend-vector-width     | Num  | Manually override backend vector-width to X          | --backend-vector=4\r\n     --spin-damp                | Num  | Use CPU for device synchronization, in percent       | --spin-damp=10\r\n     --hwmon-disable            |      | Disable temperature and fanspeed reads and triggers  |\r\n     --hwmon-temp-abort         | Num  | Abort if temperature reaches X degrees Celsius       | --hwmon-temp-abort=100\r\n     --scrypt-tmto              | Num  | Manually override TMTO value for scrypt to X         | --scrypt-tmto=3\r\n -s, --skip                     | Num  | Skip X words from the start                          | -s 1000000\r\n -l, --limit                    | Num  | Limit X words from the start + skipped words         | -l 1000000\r\n     --keyspace                 |      | Show keyspace base:mod values and quit               |\r\n -j, --rule-left                | Rule | Single rule applied to each word from left wordlist  | -j &#039;c&#039;\r\n -k, --rule-right               | Rule | Single rule applied to each word from right wordlist | -k &#039;^-&#039;\r\n -r, --rules-file               | File | Multiple rules applied to each word from wordlists   | -r rules/best64.rule\r\n -g, --generate-rules           | Num  | Generate X random rules                              | -g 10000\r\n     --generate-rules-func-min  | Num  | Force min X functions per rule                       |\r\n     --generate-rules-func-max  | Num  | Force max X functions per rule                       |\r\n     --generate-rules-func-sel  | Str  | Pool of rule operators valid for random rule engine  | --generate-rules-func-sel=ioTlc\r\n     --generate-rules-seed      | Num  | Force RNG seed set to X                              |\r\n -1, --custom-charset1          | CS   | User-defined charset ?1                              | -1 ?l?d?u\r\n -2, --custom-charset2          | CS   | User-defined charset ?2                              | -2 ?l?d?s\r\n -3, --custom-charset3          | CS   | User-defined charset ?3                              |\r\n -4, --custom-charset4          | CS   | User-defined charset ?4                              |\r\n     --identify                 |      | Shows all supported algorithms for input hashes      | --identify my.hash\r\n -i, --increment                |      | Enable mask increment mode                           |\r\n     --increment-min            | Num  | Start mask incrementing at X                         | --increment-min=4\r\n     --increment-max            | Num  | Stop mask incrementing at X                          | --increment-max=8\r\n -S, --slow-candidates          |      | Enable slower (but advanced) candidate generators    |\r\n     --brain-server             |      | Enable brain server                                  |\r\n     --brain-server-timer       | Num  | Update the brain server dump each X seconds (min:60) | --brain-server-timer=300\r\n -z, --brain-client             |      | Enable brain client, activates -S                    |\r\n     --brain-client-features    | Num  | Define brain client features, see below              | --brain-client-features=3\r\n     --brain-host               | Str  | Brain server host (IP or domain)                     | --brain-host=127.0.0.1\r\n     --brain-port               | Port | Brain server port                                    | --brain-port=13743\r\n     --brain-password           | Str  | Brain server authentication password                 | --brain-password=bZfhCvGUSjRq\r\n     --brain-session            | Hex  | Overrides automatically calculated brain session     | --brain-session=0x2ae611db\r\n     --brain-session-whitelist  | Hex  | Allow given sessions only, separated with commas     | --brain-session-whitelist=0x2ae611db\r\n\r\n- [ Hash modes ] -\r\n\r\n      # | Name                                                | Category\r\n  ======+=====================================================+======================================\r\n    900 | MD4                                                 | Raw Hash\r\n      0 | MD5                                                 | Raw Hash\r\n    100 | SHA1                                                | Raw Hash\r\n   1300 | SHA2-224                                            | Raw Hash\r\n   1400 | SHA2-256                                            | Raw Hash\r\n  10800 | SHA2-384                                            | Raw Hash\r\n   1700 | SHA2-512                                            | Raw Hash\r\n  17300 | SHA3-224                                            | Raw Hash\r\n  17400 | SHA3-256                                            | Raw Hash\r\n  17500 | SHA3-384                                            | Raw Hash\r\n  17600 | SHA3-512                                            | Raw Hash\r\n   6000 | RIPEMD-160                                          | Raw Hash\r\n    600 | BLAKE2b-512                                         | Raw Hash\r\n  11700 | GOST R 34.11-2012 (Streebog) 256-bit, big-endian    | Raw Hash\r\n  11800 | GOST R 34.11-2012 (Streebog) 512-bit, big-endian    | Raw Hash\r\n   6900 | GOST R 34.11-94                                     | Raw Hash\r\n  17010 | GPG (AES-128/AES-256 (SHA-1($pass)))                | Raw Hash\r\n   5100 | Half MD5                                            | Raw Hash\r\n  17700 | Keccak-224                                          | Raw Hash\r\n  17800 | Keccak-256                                          | Raw Hash\r\n  17900 | Keccak-384                                          | Raw Hash\r\n  18000 | Keccak-512                                          | Raw Hash\r\n   6100 | Whirlpool                                           | Raw Hash\r\n  10100 | SipHash                                             | Raw Hash\r\n     70 | md5(utf16le($pass))                                 | Raw Hash\r\n    170 | sha1(utf16le($pass))                                | Raw Hash\r\n   1470 | sha256(utf16le($pass))                              | Raw Hash\r\n  10870 | sha384(utf16le($pass))                              | Raw Hash\r\n   1770 | sha512(utf16le($pass))                              | Raw Hash\r\n     10 | md5($pass.$salt)                                    | Raw Hash salted and/or iterated\r\n     20 | md5($salt.$pass)                                    | Raw Hash salted and/or iterated\r\n   3800 | md5($salt.$pass.$salt)                              | Raw Hash salted and/or iterated\r\n   3710 | md5($salt.md5($pass))                               | Raw Hash salted and/or iterated\r\n   4110 | md5($salt.md5($pass.$salt))                         | Raw Hash salted and/or iterated\r\n   4010 | md5($salt.md5($salt.$pass))                         | Raw Hash salted and/or iterated\r\n  21300 | md5($salt.sha1($salt.$pass))                        | Raw Hash salted and/or iterated\r\n     40 | md5($salt.utf16le($pass))                           | Raw Hash salted and/or iterated\r\n   2600 | md5(md5($pass))                                     | Raw Hash salted and/or iterated\r\n   3910 | md5(md5($pass).md5($salt))                          | Raw Hash salted and/or iterated\r\n   3500 | md5(md5(md5($pass)))                                | Raw Hash salted and/or iterated\r\n   4400 | md5(sha1($pass))                                    | Raw Hash salted and/or iterated\r\n  20900 | md5(sha1($pass).md5($pass).sha1($pass))             | Raw Hash salted and/or iterated\r\n  21200 | md5(sha1($salt).md5($pass))                         | Raw Hash salted and/or iterated\r\n   4300 | md5(strtoupper(md5($pass)))                         | Raw Hash salted and/or iterated\r\n     30 | md5(utf16le($pass).$salt)                           | Raw Hash salted and/or iterated\r\n    110 | sha1($pass.$salt)                                   | Raw Hash salted and/or iterated\r\n    120 | sha1($salt.$pass)                                   | Raw Hash salted and/or iterated\r\n   4900 | sha1($salt.$pass.$salt)                             | Raw Hash salted and/or iterated\r\n   4520 | sha1($salt.sha1($pass))                             | Raw Hash salted and/or iterated\r\n  24300 | sha1($salt.sha1($pass.$salt))                       | Raw Hash salted and/or iterated\r\n    140 | sha1($salt.utf16le($pass))                          | Raw Hash salted and/or iterated\r\n  19300 | sha1($salt1.$pass.$salt2)                           | Raw Hash salted and/or iterated\r\n  14400 | sha1(CX)                                            | Raw Hash salted and/or iterated\r\n   4700 | sha1(md5($pass))                                    | Raw Hash salted and/or iterated\r\n   4710 | sha1(md5($pass).$salt)                              | Raw Hash salted and/or iterated\r\n  21100 | sha1(md5($pass.$salt))                              | Raw Hash salted and/or iterated\r\n  18500 | sha1(md5(md5($pass)))                               | Raw Hash salted and/or iterated\r\n   4500 | sha1(sha1($pass))                                   | Raw Hash salted and/or iterated\r\n   4510 | sha1(sha1($pass).$salt)                             | Raw Hash salted and/or iterated\r\n   5000 | sha1(sha1($salt.$pass.$salt))                       | Raw Hash salted and/or iterated\r\n    130 | sha1(utf16le($pass).$salt)                          | Raw Hash salted and/or iterated\r\n   1410 | sha256($pass.$salt)                                 | Raw Hash salted and/or iterated\r\n   1420 | sha256($salt.$pass)                                 | Raw Hash salted and/or iterated\r\n  22300 | sha256($salt.$pass.$salt)                           | Raw Hash salted and/or iterated\r\n  20720 | sha256($salt.sha256($pass))                         | Raw Hash salted and/or iterated\r\n   1440 | sha256($salt.utf16le($pass))                        | Raw Hash salted and/or iterated\r\n  20800 | sha256(md5($pass))                                  | Raw Hash salted and/or iterated\r\n  20710 | sha256(sha256($pass).$salt)                         | Raw Hash salted and/or iterated\r\n  21400 | sha256(sha256_bin($pass))                           | Raw Hash salted and/or iterated\r\n   1430 | sha256(utf16le($pass).$salt)                        | Raw Hash salted and/or iterated\r\n  10810 | sha384($pass.$salt)                                 | Raw Hash salted and/or iterated\r\n  10820 | sha384($salt.$pass)                                 | Raw Hash salted and/or iterated\r\n  10840 | sha384($salt.utf16le($pass))                        | Raw Hash salted and/or iterated\r\n  10830 | sha384(utf16le($pass).$salt)                        | Raw Hash salted and/or iterated\r\n   1710 | sha512($pass.$salt)                                 | Raw Hash salted and/or iterated\r\n   1720 | sha512($salt.$pass)                                 | Raw Hash salted and/or iterated\r\n   1740 | sha512($salt.utf16le($pass))                        | Raw Hash salted and/or iterated\r\n   1730 | sha512(utf16le($pass).$salt)                        | Raw Hash salted and/or iterated\r\n     50 | HMAC-MD5 (key = $pass)                              | Raw Hash authenticated\r\n     60 | HMAC-MD5 (key = $salt)                              | Raw Hash authenticated\r\n    150 | HMAC-SHA1 (key = $pass)                             | Raw Hash authenticated\r\n    160 | HMAC-SHA1 (key = $salt)                             | Raw Hash authenticated\r\n   1450 | HMAC-SHA256 (key = $pass)                           | Raw Hash authenticated\r\n   1460 | HMAC-SHA256 (key = $salt)                           | Raw Hash authenticated\r\n   1750 | HMAC-SHA512 (key = $pass)                           | Raw Hash authenticated\r\n   1760 | HMAC-SHA512 (key = $salt)                           | Raw Hash authenticated\r\n  11750 | HMAC-Streebog-256 (key = $pass), big-endian         | Raw Hash authenticated\r\n  11760 | HMAC-Streebog-256 (key = $salt), big-endian         | Raw Hash authenticated\r\n  11850 | HMAC-Streebog-512 (key = $pass), big-endian         | Raw Hash authenticated\r\n  11860 | HMAC-Streebog-512 (key = $salt), big-endian         | Raw Hash authenticated\r\n  11500 | CRC32                                               | Raw Checksum\r\n  27900 | CRC32C                                              | Raw Checksum\r\n  28000 | CRC64Jones                                          | Raw Checksum\r\n  18700 | Java Object hashCode()                              | Raw Checksum\r\n  25700 | MurmurHash                                          | Raw Checksum\r\n  27800 | MurmurHash3                                         | Raw Checksum\r\n  14100 | 3DES (PT = $salt, key = $pass)                      | Raw Cipher, Known-plaintext attack\r\n  14000 | DES (PT = $salt, key = $pass)                       | Raw Cipher, Known-plaintext attack\r\n  26401 | AES-128-ECB NOKDF (PT = $salt, key = $pass)         | Raw Cipher, Known-plaintext attack\r\n  26402 | AES-192-ECB NOKDF (PT = $salt, key = $pass)         | Raw Cipher, Known-plaintext attack\r\n  26403 | AES-256-ECB NOKDF (PT = $salt, key = $pass)         | Raw Cipher, Known-plaintext attack\r\n  15400 | ChaCha20                                            | Raw Cipher, Known-plaintext attack\r\n  14500 | Linux Kernel Crypto API (2.4)                       | Raw Cipher, Known-plaintext attack\r\n  14900 | Skip32 (PT = $salt, key = $pass)                    | Raw Cipher, Known-plaintext attack\r\n  11900 | PBKDF2-HMAC-MD5                                     | Generic KDF\r\n  12000 | PBKDF2-HMAC-SHA1                                    | Generic KDF\r\n  10900 | PBKDF2-HMAC-SHA256                                  | Generic KDF\r\n  12100 | PBKDF2-HMAC-SHA512                                  | Generic KDF\r\n   8900 | scrypt                                              | Generic KDF\r\n    400 | phpass                                              | Generic KDF\r\n  16100 | TACACS+                                             | Network Protocol\r\n  11400 | SIP digest authentication (MD5)                     | Network Protocol\r\n   5300 | IKE-PSK MD5                                         | Network Protocol\r\n   5400 | IKE-PSK SHA1                                        | Network Protocol\r\n  25100 | SNMPv3 HMAC-MD5-96                                  | Network Protocol\r\n  25000 | SNMPv3 HMAC-MD5-96/HMAC-SHA1-96                     | Network Protocol\r\n  25200 | SNMPv3 HMAC-SHA1-96                                 | Network Protocol\r\n  26700 | SNMPv3 HMAC-SHA224-128                              | Network Protocol\r\n  26800 | SNMPv3 HMAC-SHA256-192                              | Network Protocol\r\n  26900 | SNMPv3 HMAC-SHA384-256                              | Network Protocol\r\n  27300 | SNMPv3 HMAC-SHA512-384                              | Network Protocol\r\n   2500 | WPA-EAPOL-PBKDF2                                    | Network Protocol\r\n   2501 | WPA-EAPOL-PMK                                       | Network Protocol\r\n  22000 | WPA-PBKDF2-PMKID+EAPOL                              | Network Protocol\r\n  22001 | WPA-PMK-PMKID+EAPOL                                 | Network Protocol\r\n  16800 | WPA-PMKID-PBKDF2                                    | Network Protocol\r\n  16801 | WPA-PMKID-PMK                                       | Network Protocol\r\n   7300 | IPMI2 RAKP HMAC-SHA1                                | Network Protocol\r\n  10200 | CRAM-MD5                                            | Network Protocol\r\n  16500 | JWT (JSON Web Token)                                | Network Protocol\r\n  19600 | Kerberos 5, etype 17, TGS-REP                       | Network Protocol\r\n  19800 | Kerberos 5, etype 17, Pre-Auth                      | Network Protocol\r\n  19700 | Kerberos 5, etype 18, TGS-REP                       | Network Protocol\r\n  19900 | Kerberos 5, etype 18, Pre-Auth                      | Network Protocol\r\n   7500 | Kerberos 5, etype 23, AS-REQ Pre-Auth               | Network Protocol\r\n  13100 | Kerberos 5, etype 23, TGS-REP                       | Network Protocol\r\n  18200 | Kerberos 5, etype 23, AS-REP                        | Network Protocol\r\n   5500 | NetNTLMv1 / NetNTLMv1+ESS                           | Network Protocol\r\n  27000 | NetNTLMv1 / NetNTLMv1+ESS (NT)                      | Network Protocol\r\n   5600 | NetNTLMv2                                           | Network Protocol\r\n  27100 | NetNTLMv2 (NT)                                      | Network Protocol\r\n   4800 | iSCSI CHAP authentication, MD5(CHAP)                | Network Protocol\r\n   8500 | RACF                                                | Operating System\r\n   6300 | AIX {smd5}                                          | Operating System\r\n   6700 | AIX {ssha1}                                         | Operating System\r\n   6400 | AIX {ssha256}                                       | Operating System\r\n   6500 | AIX {ssha512}                                       | Operating System\r\n   3000 | LM                                                  | Operating System\r\n  19000 | QNX /etc/shadow (MD5)                               | Operating System\r\n  19100 | QNX /etc/shadow (SHA256)                            | Operating System\r\n  19200 | QNX /etc/shadow (SHA512)                            | Operating System\r\n  15300 | DPAPI masterkey file v1                             | Operating System\r\n  15900 | DPAPI masterkey file v2                             | Operating System\r\n   7200 | GRUB 2                                              | Operating System\r\n  12800 | MS-AzureSync PBKDF2-HMAC-SHA256                     | Operating System\r\n  12400 | BSDi Crypt, Extended DES                            | Operating System\r\n   1000 | NTLM                                                | Operating System\r\n   9900 | Radmin2                                             | Operating System\r\n   5800 | Samsung Android Password/PIN                        | Operating System\r\n  28100 | Windows Hello PIN/Password                          | Operating System\r\n  13800 | Windows Phone 8+ PIN/password                       | Operating System\r\n   2410 | Cisco-ASA MD5                                       | Operating System\r\n   9200 | Cisco-IOS $8$ (PBKDF2-SHA256)                       | Operating System\r\n   9300 | Cisco-IOS $9$ (scrypt)                              | Operating System\r\n   5700 | Cisco-IOS type 4 (SHA256)                           | Operating System\r\n   2400 | Cisco-PIX MD5                                       | Operating System\r\n   8100 | Citrix NetScaler (SHA1)                             | Operating System\r\n  22200 | Citrix NetScaler (SHA512)                           | Operating System\r\n   1100 | Domain Cached Credentials (DCC), MS Cache           | Operating System\r\n   2100 | Domain Cached Credentials 2 (DCC2), MS Cache 2      | Operating System\r\n   7000 | FortiGate (FortiOS)                                 | Operating System\r\n  26300 | FortiGate256 (FortiOS256)                           | Operating System\r\n    125 | ArubaOS                                             | Operating System\r\n    501 | Juniper IVE                                         | Operating System\r\n     22 | Juniper NetScreen/SSG (ScreenOS)                    | Operating System\r\n  15100 | Juniper/NetBSD sha1crypt                            | Operating System\r\n  26500 | iPhone passcode (UID key + System Keybag)           | Operating System\r\n    122 | macOS v10.4, macOS v10.5, macOS v10.6               | Operating System\r\n   1722 | macOS v10.7                                         | Operating System\r\n   7100 | macOS v10.8+ (PBKDF2-SHA512)                        | Operating System\r\n   3200 | bcrypt $2*$, Blowfish (Unix)                        | Operating System\r\n    500 | md5crypt, MD5 (Unix), Cisco-IOS $1$ (MD5)           | Operating System\r\n   1500 | descrypt, DES (Unix), Traditional DES               | Operating System\r\n   7400 | sha256crypt $5$, SHA256 (Unix)                      | Operating System\r\n   1800 | sha512crypt $6$, SHA512 (Unix)                      | Operating System\r\n  24600 | SQLCipher                                           | Database Server\r\n    131 | MSSQL (2000)                                        | Database Server\r\n    132 | MSSQL (2005)                                        | Database Server\r\n   1731 | MSSQL (2012, 2014)                                  | Database Server\r\n  24100 | MongoDB ServerKey SCRAM-SHA-1                       | Database Server\r\n  24200 | MongoDB ServerKey SCRAM-SHA-256                     | Database Server\r\n     12 | PostgreSQL                                          | Database Server\r\n  11100 | PostgreSQL CRAM (MD5)                               | Database Server\r\n   3100 | Oracle H: Type (Oracle 7+)                          | Database Server\r\n    112 | Oracle S: Type (Oracle 11+)                         | Database Server\r\n  12300 | Oracle T: Type (Oracle 12+)                         | Database Server\r\n   7401 | MySQL $A$ (sha256crypt)                             | Database Server\r\n  11200 | MySQL CRAM (SHA1)                                   | Database Server\r\n    200 | MySQL323                                            | Database Server\r\n    300 | MySQL4.1/MySQL5                                     | Database Server\r\n   8000 | Sybase ASE                                          | Database Server\r\n   8300 | DNSSEC (NSEC3)                                      | FTP, HTTP, SMTP, LDAP Server\r\n  25900 | KNX IP Secure - Device Authentication Code          | FTP, HTTP, SMTP, LDAP Server\r\n  16400 | CRAM-MD5 Dovecot                                    | FTP, HTTP, SMTP, LDAP Server\r\n   1411 | SSHA-256(Base64), LDAP {SSHA256}                    | FTP, HTTP, SMTP, LDAP Server\r\n   1711 | SSHA-512(Base64), LDAP {SSHA512}                    | FTP, HTTP, SMTP, LDAP Server\r\n  24900 | Dahua Authentication MD5                            | FTP, HTTP, SMTP, LDAP Server\r\n  10901 | RedHat 389-DS LDAP (PBKDF2-HMAC-SHA256)             | FTP, HTTP, SMTP, LDAP Server\r\n  15000 | FileZilla Server &gt;= 0.9.55                          | FTP, HTTP, SMTP, LDAP Server\r\n  12600 | ColdFusion 10+                                      | FTP, HTTP, SMTP, LDAP Server\r\n   1600 | Apache $apr1$ MD5, md5apr1, MD5 (APR)               | FTP, HTTP, SMTP, LDAP Server\r\n    141 | Episerver 6.x &lt; .NET 4                              | FTP, HTTP, SMTP, LDAP Server\r\n   1441 | Episerver 6.x &gt;= .NET 4                             | FTP, HTTP, SMTP, LDAP Server\r\n   1421 | hMailServer                                         | FTP, HTTP, SMTP, LDAP Server\r\n    101 | nsldap, SHA-1(Base64), Netscape LDAP SHA            | FTP, HTTP, SMTP, LDAP Server\r\n    111 | nsldaps, SSHA-1(Base64), Netscape LDAP SSHA         | FTP, HTTP, SMTP, LDAP Server\r\n   7700 | SAP CODVN B (BCODE)                                 | Enterprise Application Software (EAS)\r\n   7701 | SAP CODVN B (BCODE) from RFC_READ_TABLE             | Enterprise Application Software (EAS)\r\n   7800 | SAP CODVN F/G (PASSCODE)                            | Enterprise Application Software (EAS)\r\n   7801 | SAP CODVN F/G (PASSCODE) from RFC_READ_TABLE        | Enterprise Application Software (EAS)\r\n  10300 | SAP CODVN H (PWDSALTEDHASH) iSSHA-1                 | Enterprise Application Software (EAS)\r\n    133 | PeopleSoft                                          | Enterprise Application Software (EAS)\r\n  13500 | PeopleSoft PS_TOKEN                                 | Enterprise Application Software (EAS)\r\n  21500 | SolarWinds Orion                                    | Enterprise Application Software (EAS)\r\n  21501 | SolarWinds Orion v2                                 | Enterprise Application Software (EAS)\r\n     24 | SolarWinds Serv-U                                   | Enterprise Application Software (EAS)\r\n   8600 | Lotus Notes/Domino 5                                | Enterprise Application Software (EAS)\r\n   8700 | Lotus Notes/Domino 6                                | Enterprise Application Software (EAS)\r\n   9100 | Lotus Notes/Domino 8                                | Enterprise Application Software (EAS)\r\n  26200 | OpenEdge Progress Encode                            | Enterprise Application Software (EAS)\r\n  20600 | Oracle Transportation Management (SHA256)           | Enterprise Application Software (EAS)\r\n   4711 | Huawei sha1(md5($pass).$salt)                       | Enterprise Application Software (EAS)\r\n  20711 | AuthMe sha256                                       | Enterprise Application Software (EAS)\r\n  22400 | AES Crypt (SHA256)                                  | Full-Disk Encryption (FDE)\r\n  27400 | VMware VMX (PBKDF2-HMAC-SHA1 + AES-256-CBC)         | Full-Disk Encryption (FDE)\r\n  14600 | LUKS                                                | Full-Disk Encryption (FDE)\r\n  13711 | VeraCrypt RIPEMD160 + XTS 512 bit                   | Full-Disk Encryption (FDE)\r\n  13712 | VeraCrypt RIPEMD160 + XTS 1024 bit                  | Full-Disk Encryption (FDE)\r\n  13713 | VeraCrypt RIPEMD160 + XTS 1536 bit                  | Full-Disk Encryption (FDE)\r\n  13741 | VeraCrypt RIPEMD160 + XTS 512 bit + boot-mode       | Full-Disk Encryption (FDE)\r\n  13742 | VeraCrypt RIPEMD160 + XTS 1024 bit + boot-mode      | Full-Disk Encryption (FDE)\r\n  13743 | VeraCrypt RIPEMD160 + XTS 1536 bit + boot-mode      | Full-Disk Encryption (FDE)\r\n  13751 | VeraCrypt SHA256 + XTS 512 bit                      | Full-Disk Encryption (FDE)\r\n  13752 | VeraCrypt SHA256 + XTS 1024 bit                     | Full-Disk Encryption (FDE)\r\n  13753 | VeraCrypt SHA256 + XTS 1536 bit                     | Full-Disk Encryption (FDE)\r\n  13761 | VeraCrypt SHA256 + XTS 512 bit + boot-mode          | Full-Disk Encryption (FDE)\r\n  13762 | VeraCrypt SHA256 + XTS 1024 bit + boot-mode         | Full-Disk Encryption (FDE)\r\n  13763 | VeraCrypt SHA256 + XTS 1536 bit + boot-mode         | Full-Disk Encryption (FDE)\r\n  13721 | VeraCrypt SHA512 + XTS 512 bit                      | Full-Disk Encryption (FDE)\r\n  13722 | VeraCrypt SHA512 + XTS 1024 bit                     | Full-Disk Encryption (FDE)\r\n  13723 | VeraCrypt SHA512 + XTS 1536 bit                     | Full-Disk Encryption (FDE)\r\n  13771 | VeraCrypt Streebog-512 + XTS 512 bit                | Full-Disk Encryption (FDE)\r\n  13772 | VeraCrypt Streebog-512 + XTS 1024 bit               | Full-Disk Encryption (FDE)\r\n  13773 | VeraCrypt Streebog-512 + XTS 1536 bit               | Full-Disk Encryption (FDE)\r\n  13781 | VeraCrypt Streebog-512 + XTS 512 bit + boot-mode    | Full-Disk Encryption (FDE)\r\n  13782 | VeraCrypt Streebog-512 + XTS 1024 bit + boot-mode   | Full-Disk Encryption (FDE)\r\n  13783 | VeraCrypt Streebog-512 + XTS 1536 bit + boot-mode   | Full-Disk Encryption (FDE)\r\n  13731 | VeraCrypt Whirlpool + XTS 512 bit                   | Full-Disk Encryption (FDE)\r\n  13732 | VeraCrypt Whirlpool + XTS 1024 bit                  | Full-Disk Encryption (FDE)\r\n  13733 | VeraCrypt Whirlpool + XTS 1536 bit                  | Full-Disk Encryption (FDE)\r\n  23900 | BestCrypt v3 Volume Encryption                      | Full-Disk Encryption (FDE)\r\n  16700 | FileVault 2                                         | Full-Disk Encryption (FDE)\r\n  27500 | VirtualBox (PBKDF2-HMAC-SHA256 &amp; AES-128-XTS)       | Full-Disk Encryption (FDE)\r\n  27600 | VirtualBox (PBKDF2-HMAC-SHA256 &amp; AES-256-XTS)       | Full-Disk Encryption (FDE)\r\n  20011 | DiskCryptor SHA512 + XTS 512 bit                    | Full-Disk Encryption (FDE)\r\n  20012 | DiskCryptor SHA512 + XTS 1024 bit                   | Full-Disk Encryption (FDE)\r\n  20013 | DiskCryptor SHA512 + XTS 1536 bit                   | Full-Disk Encryption (FDE)\r\n  22100 | BitLocker                                           | Full-Disk Encryption (FDE)\r\n  12900 | Android FDE (Samsung DEK)                           | Full-Disk Encryption (FDE)\r\n   8800 | Android FDE &lt;= 4.3                                  | Full-Disk Encryption (FDE)\r\n  18300 | Apple File System (APFS)                            | Full-Disk Encryption (FDE)\r\n   6211 | TrueCrypt RIPEMD160 + XTS 512 bit                   | Full-Disk Encryption (FDE)\r\n   6212 | TrueCrypt RIPEMD160 + XTS 1024 bit                  | Full-Disk Encryption (FDE)\r\n   6213 | TrueCrypt RIPEMD160 + XTS 1536 bit                  | Full-Disk Encryption (FDE)\r\n   6241 | TrueCrypt RIPEMD160 + XTS 512 bit + boot-mode       | Full-Disk Encryption (FDE)\r\n   6242 | TrueCrypt RIPEMD160 + XTS 1024 bit + boot-mode      | Full-Disk Encryption (FDE)\r\n   6243 | TrueCrypt RIPEMD160 + XTS 1536 bit + boot-mode      | Full-Disk Encryption (FDE)\r\n   6221 | TrueCrypt SHA512 + XTS 512 bit                      | Full-Disk Encryption (FDE)\r\n   6222 | TrueCrypt SHA512 + XTS 1024 bit                     | Full-Disk Encryption (FDE)\r\n   6223 | TrueCrypt SHA512 + XTS 1536 bit                     | Full-Disk Encryption (FDE)\r\n   6231 | TrueCrypt Whirlpool + XTS 512 bit                   | Full-Disk Encryption (FDE)\r\n   6232 | TrueCrypt Whirlpool + XTS 1024 bit                  | Full-Disk Encryption (FDE)\r\n   6233 | TrueCrypt Whirlpool + XTS 1536 bit                  | Full-Disk Encryption (FDE)\r\n  12200 | eCryptfs                                            | Full-Disk Encryption (FDE)\r\n  10400 | PDF 1.1 - 1.3 (Acrobat 2 - 4)                       | Document\r\n  10410 | PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #1          | Document\r\n  10420 | PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #2          | Document\r\n  10500 | PDF 1.4 - 1.6 (Acrobat 5 - 8)                       | Document\r\n  25400 | PDF 1.4 - 1.6 (Acrobat 5 - 8) - user and owner pass | Document\r\n  10600 | PDF 1.7 Level 3 (Acrobat 9)                         | Document\r\n  10700 | PDF 1.7 Level 8 (Acrobat 10 - 11)                   | Document\r\n   9400 | MS Office 2007                                      | Document\r\n   9500 | MS Office 2010                                      | Document\r\n   9600 | MS Office 2013                                      | Document\r\n  25300 | MS Office 2016 - SheetProtection                    | Document\r\n   9700 | MS Office &lt;= 2003 $0/$1, MD5 + RC4                  | Document\r\n   9710 | MS Office &lt;= 2003 $0/$1, MD5 + RC4, collider #1     | Document\r\n   9720 | MS Office &lt;= 2003 $0/$1, MD5 + RC4, collider #2     | Document\r\n   9810 | MS Office &lt;= 2003 $3, SHA1 + RC4, collider #1       | Document\r\n   9820 | MS Office &lt;= 2003 $3, SHA1 + RC4, collider #2       | Document\r\n   9800 | MS Office &lt;= 2003 $3/$4, SHA1 + RC4                 | Document\r\n  18400 | Open Document Format (ODF) 1.2 (SHA-256, AES)       | Document\r\n  18600 | Open Document Format (ODF) 1.1 (SHA-1, Blowfish)    | Document\r\n  16200 | Apple Secure Notes                                  | Document\r\n  23300 | Apple iWork                                         | Document\r\n   6600 | 1Password, agilekeychain                            | Password Manager\r\n   8200 | 1Password, cloudkeychain                            | Password Manager\r\n   9000 | Password Safe v2                                    | Password Manager\r\n   5200 | Password Safe v3                                    | Password Manager\r\n   6800 | LastPass + LastPass sniffed                         | Password Manager\r\n  13400 | KeePass 1 (AES/Twofish) and KeePass 2 (AES)         | Password Manager\r\n  23400 | Bitwarden                                           | Password Manager\r\n  16900 | Ansible Vault                                       | Password Manager\r\n  26000 | Mozilla key3.db                                     | Password Manager\r\n  26100 | Mozilla key4.db                                     | Password Manager\r\n  23100 | Apple Keychain                                      | Password Manager\r\n  11600 | 7-Zip                                               | Archive\r\n  12500 | RAR3-hp                                             | Archive\r\n  23800 | RAR3-p (Compressed)                                 | Archive\r\n  23700 | RAR3-p (Uncompressed)                               | Archive\r\n  13000 | RAR5                                                | Archive\r\n  17220 | PKZIP (Compressed Multi-File)                       | Archive\r\n  17200 | PKZIP (Compressed)                                  | Archive\r\n  17225 | PKZIP (Mixed Multi-File)                            | Archive\r\n  17230 | PKZIP (Mixed Multi-File Checksum-Only)              | Archive\r\n  17210 | PKZIP (Uncompressed)                                | Archive\r\n  20500 | PKZIP Master Key                                    | Archive\r\n  20510 | PKZIP Master Key (6 byte optimization)              | Archive\r\n  23001 | SecureZIP AES-128                                   | Archive\r\n  23002 | SecureZIP AES-192                                   | Archive\r\n  23003 | SecureZIP AES-256                                   | Archive\r\n  13600 | WinZip                                              | Archive\r\n  18900 | Android Backup                                      | Archive\r\n  24700 | Stuffit5                                            | Archive\r\n  13200 | AxCrypt 1                                           | Archive\r\n  13300 | AxCrypt 1 in-memory SHA1                            | Archive\r\n  23500 | AxCrypt 2 AES-128                                   | Archive\r\n  23600 | AxCrypt 2 AES-256                                   | Archive\r\n  14700 | iTunes backup &lt; 10.0                                | Archive\r\n  14800 | iTunes backup &gt;= 10.0                               | Archive\r\n   8400 | WBB3 (Woltlab Burning Board)                        | Forums, CMS, E-Commerce\r\n   2612 | PHPS                                                | Forums, CMS, E-Commerce\r\n    121 | SMF (Simple Machines Forum) &gt; v1.1                  | Forums, CMS, E-Commerce\r\n   3711 | MediaWiki B type                                    | Forums, CMS, E-Commerce\r\n   4521 | Redmine                                             | Forums, CMS, E-Commerce\r\n  24800 | Umbraco HMAC-SHA1                                   | Forums, CMS, E-Commerce\r\n     11 | Joomla &lt; 2.5.18                                     | Forums, CMS, E-Commerce\r\n  13900 | OpenCart                                            | Forums, CMS, E-Commerce\r\n  11000 | PrestaShop                                          | Forums, CMS, E-Commerce\r\n  16000 | Tripcode                                            | Forums, CMS, E-Commerce\r\n   7900 | Drupal7                                             | Forums, CMS, E-Commerce\r\n   4522 | PunBB                                               | Forums, CMS, E-Commerce\r\n   2811 | MyBB 1.2+, IPB2+ (Invision Power Board)             | Forums, CMS, E-Commerce\r\n   2611 | vBulletin &lt; v3.8.5                                  | Forums, CMS, E-Commerce\r\n   2711 | vBulletin &gt;= v3.8.5                                 | Forums, CMS, E-Commerce\r\n  25600 | bcrypt(md5($pass)) / bcryptmd5                      | Forums, CMS, E-Commerce\r\n  25800 | bcrypt(sha1($pass)) / bcryptsha1                    | Forums, CMS, E-Commerce\r\n     21 | osCommerce, xt:Commerce                             | Forums, CMS, E-Commerce\r\n  18100 | TOTP (HMAC-SHA1)                                    | One-Time Password\r\n   2000 | STDOUT                                              | Plaintext\r\n  99999 | Plaintext                                           | Plaintext\r\n  21600 | Web2py pbkdf2-sha512                                | Framework\r\n  10000 | Django (PBKDF2-SHA256)                              | Framework\r\n    124 | Django (SHA-1)                                      | Framework\r\n  12001 | Atlassian (PBKDF2-HMAC-SHA1)                        | Framework\r\n  19500 | Ruby on Rails Restful-Authentication                | Framework\r\n  27200 | Ruby on Rails Restful Auth (one round, no sitekey)  | Framework\r\n  20200 | Python passlib pbkdf2-sha512                        | Framework\r\n  20300 | Python passlib pbkdf2-sha256                        | Framework\r\n  20400 | Python passlib pbkdf2-sha1                          | Framework\r\n  24410 | PKCS#8 Private Keys (PBKDF2-HMAC-SHA1 + 3DES/AES)   | Private Key\r\n  24420 | PKCS#8 Private Keys (PBKDF2-HMAC-SHA256 + 3DES/AES) | Private Key\r\n  15500 | JKS Java Key Store Private Keys (SHA1)              | Private Key\r\n  22911 | RSA/DSA/EC/OpenSSH Private Keys ($0$)               | Private Key\r\n  22921 | RSA/DSA/EC/OpenSSH Private Keys ($6$)               | Private Key\r\n  22931 | RSA/DSA/EC/OpenSSH Private Keys ($1, $3$)           | Private Key\r\n  22941 | RSA/DSA/EC/OpenSSH Private Keys ($4$)               | Private Key\r\n  22951 | RSA/DSA/EC/OpenSSH Private Keys ($5$)               | Private Key\r\n  23200 | XMPP SCRAM PBKDF2-SHA1                              | Instant Messaging Service\r\n  22600 | Telegram Desktop &lt; v2.1.14 (PBKDF2-HMAC-SHA1)       | Instant Messaging Service\r\n  24500 | Telegram Desktop &gt;= v2.1.14 (PBKDF2-HMAC-SHA512)    | Instant Messaging Service\r\n  22301 | Telegram Mobile App Passcode (SHA256)               | Instant Messaging Service\r\n     23 | Skype                                               | Instant Messaging Service\r\n  26600 | MetaMask Wallet                                     | Cryptocurrency Wallet\r\n  21000 | BitShares v0.x - sha512(sha512_bin(pass))           | Cryptocurrency Wallet\r\n  11300 | Bitcoin/Litecoin wallet.dat                         | Cryptocurrency Wallet\r\n  16600 | Electrum Wallet (Salt-Type 1-3)                     | Cryptocurrency Wallet\r\n  21700 | Electrum Wallet (Salt-Type 4)                       | Cryptocurrency Wallet\r\n  21800 | Electrum Wallet (Salt-Type 5)                       | Cryptocurrency Wallet\r\n  12700 | Blockchain, My Wallet                               | Cryptocurrency Wallet\r\n  15200 | Blockchain, My Wallet, V2                           | Cryptocurrency Wallet\r\n  18800 | Blockchain, My Wallet, Second Password (SHA256)     | Cryptocurrency Wallet\r\n  25500 | Stargazer Stellar Wallet XLM                        | Cryptocurrency Wallet\r\n  16300 | Ethereum Pre-Sale Wallet, PBKDF2-HMAC-SHA256        | Cryptocurrency Wallet\r\n  15600 | Ethereum Wallet, PBKDF2-HMAC-SHA256                 | Cryptocurrency Wallet\r\n  15700 | Ethereum Wallet, SCRYPT                             | Cryptocurrency Wallet\r\n  22500 | MultiBit Classic .key (MD5)                         | Cryptocurrency Wallet\r\n  27700 | MultiBit Classic .wallet (scrypt)                   | Cryptocurrency Wallet\r\n  22700 | MultiBit HD (scrypt)                                | Cryptocurrency Wallet\r\n\r\n- [ Brain Client Features ] -\r\n\r\n  # | Features\r\n ===+========\r\n  1 | Send hashed passwords\r\n  2 | Send attack positions\r\n  3 | Send hashed passwords and attack positions\r\n\r\n- [ Outfile Formats ] -\r\n\r\n  # | Format\r\n ===+========\r\n  1 | hash[:salt]\r\n  2 | plain\r\n  3 | hex_plain\r\n  4 | crack_pos\r\n  5 | timestamp absolute\r\n  6 | timestamp relative\r\n\r\n- [ Rule Debugging Modes ] -\r\n\r\n  # | Format\r\n ===+========\r\n  1 | Finding-Rule\r\n  2 | Original-Word\r\n  3 | Original-Word:Finding-Rule\r\n  4 | Original-Word:Finding-Rule:Processed-Word\r\n\r\n- [ Attack Modes ] -\r\n\r\n  # | Mode\r\n ===+======\r\n  0 | Straight\r\n  1 | Combination\r\n  3 | Brute-force\r\n  6 | Hybrid Wordlist + Mask\r\n  7 | Hybrid Mask + Wordlist\r\n  9 | Association\r\n\r\n- [ Built-in Charsets ] -\r\n\r\n  ? | Charset\r\n ===+=========\r\n  l | abcdefghijklmnopqrstuvwxyz [a-z]\r\n  u | ABCDEFGHIJKLMNOPQRSTUVWXYZ [A-Z]\r\n  d | 0123456789                 [0-9]\r\n  h | 0123456789abcdef           [0-9a-f]\r\n  H | 0123456789ABCDEF           [0-9A-F]\r\n  s |  !&quot;#$%&amp;&#039;()*+,-./:;&lt;=&gt;?@[]^_`{|}~\r\n  a | ?l?u?d?s\r\n  b | 0x00 - 0xff\r\n\r\n- [ OpenCL Device Types ] -\r\n\r\n  # | Device Type\r\n ===+=============\r\n  1 | CPU\r\n  2 | GPU\r\n  3 | FPGA, DSP, Co-Processor\r\n\r\n- [ Workload Profiles ] -\r\n\r\n  # | Performance | Runtime | Power Consumption | Desktop Impact\r\n ===+=============+=========+===================+=================\r\n  1 | Low         |   2 ms  | Low               | Minimal\r\n  2 | Default     |  12 ms  | Economic          | Noticeable\r\n  3 | High        |  96 ms  | High              | Unresponsive\r\n  4 | Nightmare   | 480 ms  | Insane            | Headless\r\n\r\n- [ License ] -\r\n\r\n  hashcat is licensed under the MIT license\r\n  Copyright and license terms are listed in docs/license.txt\r\n\r\n- [ Basic Examples ] -\r\n\r\n  Attack-          | Hash- |\r\n  Mode             | Type  | Example command\r\n ==================+=======+==================================================================\r\n  Wordlist         | $P$   | hashcat -a 0 -m 400 example400.hash example.dict\r\n  Wordlist + Rules | MD5   | hashcat -a 0 -m 0 example0.hash example.dict -r rules/best64.rule\r\n  Brute-Force      | MD5   | hashcat -a 3 -m 0 example0.hash ?a?a?a?a?a?a\r\n  Combinator       | MD5   | hashcat -a 1 -m 0 example0.hash example.dict example.dict\r\n  Association      | $1$   | hashcat -a 9 -m 500 example500.hash 1word.dict -r rules/best64.rule\r\n\r\nIf you still have no idea what just happened, try the following pages:\r\n\r\n* https://hashcat.net/wiki/#howtos_videos_papers_articles_etc_in_the_wild\r\n* https://hashcat.net/faq/\r\n\r\nIf you think you need help by a real human come to the hashcat Discord:\r\n\r\n* https://hashcat.net/discord\r\n');
INSERT INTO `herramientas` (`id_herramienta`, `nombre_herramienta`, `ayuda_herramienta`) VALUES
(16, 'Unicornscan', 'unicornscan (version 0.4.7)\r\nusage: unicornscan [options `b:B:cd:De:EFG:hHi:Ij:l:L:m:M:o:p:P:q:Qr:R:s:St:T:u:Uw:W:vVzZ:\' ] X.X.X.X/YY:S-E\r\n        -b, --broken-crc     *set broken crc sums on [T]ransport layer, [N]etwork layer, or both[TN]\r\n        -B, --source-port    *set source port? or whatever the scan module expects as a number\r\n        -c, --proc-duplicates process duplicate replies\r\n        -d, --delay-type     *set delay type (numeric value, valid options are `1:tsc 2:gtod 3:sleep\')\r\n        -D, --no-defpayload   no default Payload, only probe known protocols\r\n        -e, --enable-module  *enable modules listed as arguments (output and report currently)\r\n        -E, --proc-errors     for processing `non-open\' responses (icmp errors, tcp rsts...)\r\n        -F, --try-frags       \r\n        -G, --payload-group     *payload group (numeric) for tcp/udp type payload selection (default all)\r\n        -h, --help            help\r\n        -H, --do-dns          resolve hostnames during the reporting phase\r\n        -i, --interface      *interface name, like eth0 or fxp1, not normally required\r\n        -I, --immediate       immediate mode, display things as we find them\r\n        -j, --ignore-seq     *ignore `A\'ll, \'R\'eset sequence numbers for tcp header validation\r\n        -l, --logfile        *write to this file not my terminal\r\n        -L, --packet-timeout *wait this long for packets to come back (default 7 secs)\r\n        -m, --mode           *scan mode, tcp (syn) scan is default, U for udp T for tcp `sf\' for tcp connect scan and A for arp\r\n                               for -mT you can also specify tcp flags following the T like -mTsFpU for example\r\n                               that would send tcp syn packets with (NO Syn|FIN|NO Push|URG)\r\n        -M, --module-dir     *directory modules are found at (defaults to /usr/lib/unicornscan/modules)\r\n        -o, --format         *format of what to display for replies, see man page for format specification\r\n        -p, --ports           global ports to scan, if not specified in target options\r\n        -P, --pcap-filter    *extra pcap filter string for reciever\r\n        -q, --covertness     *covertness value from 0 to 255\r\n        -Q, --quiet           dont use output to screen, its going somewhere else (a database say...)\r\n        -r, --pps            *packets per second (total, not per host, and as you go higher it gets less accurate)\r\n        -R, --repeats        *repeat packet scan N times\r\n        -s, --source-addr    *source address for packets `r\' for random\r\n        -S, --no-shuffle      do not shuffle ports\r\n        -t, --ip-ttl         *set TTL on sent packets as in 62 or 6-16 or r64-128\r\n        -T, --ip-tos         *set TOS on sent packets\r\n        -u, --debug             *debug mask\r\n        -U, --no-openclosed      dont say open or closed\r\n        -w, --safefile       *write pcap file of recieved packets\r\n        -W, --fingerprint    *OS fingerprint 0=cisco(def) 1=openbsd 2=WindowsXP 3=p0fsendsyn 4=FreeBSD 5=nmap\r\n                              6=linux 7:strangetcp\r\n        -v, --verbose         verbose (each time more verbose so -vvvvv is really verbose)\r\n        -V, --version         display version\r\n        -z, --sniff           sniff alike\r\n        -Z, --drone-str      *drone String\r\n*:      options with `*\' require an argument following them\r\n\r\n  address ranges are cidr like 1.2.3.4/8 for all of 1.?.?.?\r\n  if you omit the cidr mask then /32 is implied\r\n  port ranges are like 1-4096 with 53 only scanning one port, a for all 65k and p for 1-1024\r\nexample: unicornscan -i eth1 -Ir 160 -E 192.168.1.0/24:1-4000 gateway:a\r\n'),
(17, 'Legion', 'Interfaz grafica, muestra, puertos, servicios, exploits, CVE, contraseñas, usuarios.'),
(18, 'hash-identifier', 'Hash types this tool can positively identify:\r\n\r\nMD5\r\nSHA1 (SHA128)\r\nSHA2 (SHA256)\r\nSHA512\r\nMySQL\r\nMD5 Wordpress\r\nMD5 phpBB\r\nBCRYPT\r\nMD5-Crypt\r\nOracle\r\nSHA-Crypt\r\nPHPS\r\nand more…'),
(19, 'Hydra', 'Hydra v9.3 (c) 2022 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\r\n\r\nSyntax: hydra [[[-l LOGIN|-L FILE] [-p PASS|-P FILE]] | [-C FILE]] [-e nsr] [-o FILE] [-t TASKS] [-M FILE [-T TASKS]] [-w TIME] [-W TIME] [-f] [-s PORT] [-x MIN:MAX:CHARSET] [-c TIME] [-ISOuvVd46] [-m MODULE_OPT] [service://server[:PORT][/OPT]]\r\n\r\nOptions:\r\n  -l LOGIN or -L FILE  login with LOGIN name, or load several logins from FILE\r\n  -p PASS  or -P FILE  try password PASS, or load several passwords from FILE\r\n  -C FILE   colon separated \"login:pass\" format, instead of -L/-P options\r\n  -M FILE   list of servers to attack, one entry per line, \':\' to specify port\r\n  -t TASKS  run TASKS number of connects in parallel per target (default: 16)\r\n  -U        service module usage details\r\n  -m OPT    options specific for a module, see -U output for information\r\n  -h        more command line options (COMPLETE HELP)\r\n  server    the target: DNS, IP or 192.168.0.0/24 (this OR the -M option)\r\n  service   the service to crack (see below for supported protocols)\r\n  OPT       some service modules support additional input (-U for module help)\r\n\r\nSupported services: adam6500 asterisk cisco cisco-enable cobaltstrike cvs firebird ftp[s] http[s]-{head|get|post} http[s]-{get|post}-form http-proxy http-proxy-urlenum icq imap[s] irc ldap2[s] ldap3[-{cram|digest}md5][s] memcached mongodb mssql mysql nntp oracle-listener oracle-sid pcanywhere pcnfs pop3[s] postgres radmin2 rdp redis rexec rlogin rpcap rsh rtsp s7-300 sip smb smtp[s] smtp-enum snmp socks5 ssh sshkey svn teamspeak telnet[s] vmauthd vnc xmpp\r\n\r\nHydra is a tool to guess/crack valid login/password pairs.\r\nLicensed under AGPL v3.0. The newest version is always available at;\r\nhttps://github.com/vanhauser-thc/thc-hydra\r\nPlease don\'t use in military or secret service organizations, or for illegal\r\npurposes. (This is a wish and non-binding - most such people do not care about\r\nlaws and ethics anyway - and tell themselves they are one of the good ones.)\r\n\r\nExample:  hydra -l user -P passlist.txt ftp://192.168.0.1\r\n'),
(20, 'aircrack-ng', ''),
(21, 'Crunch', 'crunch version 3.6\r\n\r\nCrunch can create a wordlist based on criteria you specify.  The output from crunch can be sent to the screen, file, or to another program.\r\n\r\nUsage: crunch <min> <max> [options]\r\nwhere min and max are numbers\r\n\r\nPlease refer to the man page for instructions and examples on how to use crunch.\r\n'),
(23, 'Network Miner', 'Extrae fihheros de un archivo .pcap y los organiza'),
(25, 'Comandos linux', ''),
(26, 'VNC', 'Link de descarga:\r\nhttps://www.realvnc.com/en/connect/download/vnc/'),
(42, 'Sitio web', ''),
(43, 'medusa', 'Medusa v2.2 [http://www.foofus.net] (C) JoMo-Kun / Foofus Networks &lt;jmk@foofus.net&gt;\r\n\r\nmedusa: option requires an argument -- &#039;h&#039;\r\nCRITICAL: Unknown error processing command-line options.\r\nALERT: Host information must be supplied.\r\n\r\nSyntax: Medusa [-h host|-H file] [-u username|-U file] [-p password|-P file] [-C file] -M module [OPT]\r\n  -h [TEXT]    : Target hostname or IP address\r\n  -H [FILE]    : File containing target hostnames or IP addresses\r\n  -u [TEXT]    : Username to test\r\n  -U [FILE]    : File containing usernames to test\r\n  -p [TEXT]    : Password to test\r\n  -P [FILE]    : File containing passwords to test\r\n  -C [FILE]    : File containing combo entries. See README for more information.\r\n  -O [FILE]    : File to append log information to\r\n  -e [n/s/ns]  : Additional password checks ([n] No Password, [s] Password = Username)\r\n  -M [TEXT]    : Name of the module to execute (without the .mod extension)\r\n  -m [TEXT]    : Parameter to pass to the module. This can be passed multiple times with a\r\n                 different parameter each time and they will all be sent to the module (i.e.\r\n                 -m Param1 -m Param2, etc.)\r\n  -d           : Dump all known modules\r\n  -n [NUM]     : Use for non-default TCP port number\r\n  -s           : Enable SSL\r\n  -g [NUM]     : Give up after trying to connect for NUM seconds (default 3)\r\n  -r [NUM]     : Sleep NUM seconds between retry attempts (default 3)\r\n  -R [NUM]     : Attempt NUM retries before giving up. The total number of attempts will be NUM + 1.\r\n  -c [NUM]     : Time to wait in usec to verify socket is available (default 500 usec).\r\n  -t [NUM]     : Total number of logins to be tested concurrently\r\n  -T [NUM]     : Total number of hosts to be tested concurrently\r\n  -L           : Parallelize logins using one username per thread. The default is to process \r\n                 the entire username before proceeding.\r\n  -f           : Stop scanning host after first valid username/password found.\r\n  -F           : Stop audit after first valid username/password found on any host.\r\n  -b           : Suppress startup banner\r\n  -q           : Display module&#039;s usage information\r\n  -v [NUM]     : Verbose level [0 - 6 (more)]\r\n  -w [NUM]     : Error debug level [0 - 10 (more)]\r\n  -V           : Display version\r\n  -Z [TEXT]    : Resume scan based on map of previous scan\r\n'),
(44, 'Comandos windows', ''),
(45, 'dnsrecon', ''),
(46, 'theHarvester', ''),
(47, 'google', ''),
(48, 'dmitry', ''),
(49, 'sqlmap', ''),
(50, 'peframe', ''),
(51, 'steghide', 'c3RlZ2hpZGUgdmVyc2lvbiAwLjUuMQ0KDQplbCBwcmltZXIgYXJndW1lbnRvIGRlYmUgc2VyIHVubyBkZSBsb3Mgc2lndWllbnRlczoNCiBlbWJlZCwgLS1lbWJlZCAgICAgICAgICBhZGp1bnRhciBkYXRvcw0KIGV4dHJhY3QsIC0tZXh0cmFjdCAgICAgIGV4dHJhZXIgZGF0b3MNCiBpbmZvLCAtLWluZm8gICAgICAgICAgICBtb3N0cmFyIGluZm9ybWFjae+/vW4gc29icmUgdW4gYXJjaGl2byBkZSBwb3J0YWRhIG8gc3RlZ28gDQogICBpbmZvIDxub21hcmNoaXZvPiAgICAgbW9zdHJhciBpbmZvcm1hY2nvv71uIHNvYnJlIDxub21hcmNoaXZvPg0KIGVuY2luZm8sIC0tZW5jaW5mbyAgICAgIG1vc3RyYXIgdW5hIGxpc3RhIGRlIGFsZ29yaXRtb3MgZGUgZW5jcmlwdGFkbyByZWNvbm9jaWRvcw0KIHZlcnNpb24sIC0tdmVyc2lvbiAgICAgIG1vc3RyYXIgaW5mb3JtYWNp77+9biBkZSBsYSB2ZXJzae+/vW4NCiBsaWNlbnNlLCAtLWxpY2Vuc2UgICAgICB2ZXIgbGEgbGljZW5jaWEgZGUgc3RlZ2hpZGUNCiBoZWxwLCAtLWhlbHAgICAgICAgICAgICB2ZXIgZXN0YSBpbmZvcm1hY2nvv71uIHBhcmEgc3UgdXNvDQoNCm9wY2lvbmVzIGRlIGxvcyBhZGp1bnRvczoNCiAtZWYsIC0tZW1iZWRmaWxlICAgICAgICBlbGVnaXIgYXJjaGl2byBwYXJhIGFkanVudGFyDQogICAtZWYgPG5vbWFyY2hpdm8+ICAgICAgYWRqdW50YXIgZWwgYXJjaGl2byA8bm9tYXJjaGl2bz4NCiAtY2YsIC0tY292ZXJmaWxlICAgICAgICBlbGVnaXIgYXJjaGl2byBkZSBwb3J0YWRhDQogICAtY2YgPG5vbWFyY2hpdm8+ICAgICAgYWRqdW50YXIgZW4gZWwgYXJjaGl2byA8bm9tYXJjaGl2bz4NCiAtcCwgLS1wYXNzcGhyYXNlICAgICAgICBkZWNsYXJhciBzYWx2b2NvbmR1Y3RvDQogICAtcCA8c2Fsdm9jb25kdWN0bz4gICAgdXNhciA8c2Fsdm9jb25kdWN0bz4gcGFyYSBhZGp1bnRhciBkYXRvcw0KIC1zZiwgLS1zdGVnb2ZpbGUgICAgICAgIGVsZWdpciBhcmNoaXZvIHN0ZWdvDQogICAtc2YgPG5vbWFyY2hpdm8+ICAgICAgZXNjcmliaXIgcmVzdWx0YWRvIGVuIDxub21hcmNoaXZvPiBlbiB2ZXogZGUgZW4gYXJjaGl2byBkZSBwb3J0YWRhDQogLWUsIC0tZW5jcnlwdGlvbiAgICAgICAgZWxlZ2lyIHBhcu+/vW1ldHJvcyBkZSBlbmNyaXB0YWRvDQogICAtZSA8YT5bPG0+XXw8bT5bPGE+XSAgZGVjbGFyYXIgdW4gYWxnb3JpdG1vIHkvbyBtb2RhbGlkYWQgZGUgZW5jcmlwdGFkbw0KICAgLWUgbm9uZSAgICAgICAgICAgICAgIG5vIGVuY3JpcHRhciBkYXRvcyBhbnRlcyBkZWwgYWRqdW50bw0KIC16LCAtLWNvbXByZXNzICAgICAgICAgIGNvbXByaW1pciBkYXRvcyBhbnRlcyBkZWwgYWRqdW50byAob21pc2nvv71uKQ0KICAgLXogPGw+ICAgICAgICAgICAgICAgIHVzYW5kbyBuaXZlbCA8bD4gKDEgbe+/vXMgcu+/vXBpZG8uLi45IG1lam9yIGNvbXByZXNp77+9bikNCiAtWiwgLS1kb250Y29tcHJlc3MgICAgICBubyBjb21wcmltaXIgZGF0b3MgYW50ZXMgZGVsIGFkanVudG8NCiAtSywgLS1ub2NoZWNrc3VtICAgICAgICBubyBhZGp1bnRhciBlbCBjaGVja3N1bSBjcmMzMiBkZSBsb3MgYWRqdW50b3MNCiAtTiwgLS1kb250ZW1iZWRuYW1lICAgICBubyBhZGp1bnRhciBlbCBub21icmUgZGVsIGFyY2hpdm8gb3JpZ2luYWwNCiAtZiwgLS1mb3JjZSAgICAgICAgICAgICBzb2JyZWVzY3JpYmlyIGFyY2hpdm9zIGV4aXN0ZW50ZXMNCiAtcSwgLS1xdWlldCAgICAgICAgICAgICBldml0YXIgbG9zIG1lbnNhamVzIGluZm9ybWF0aXZvcw0KIC12LCAtLXZlcmJvc2UgICAgICAgICAgIHZlciBpbmZvcm1hY2nvv71uIGRldGFsbGFkYQ0KDQpvcGNpb25lcyBkZSBleHRyYWNjae+/vW46DQogLXNmLCAtLXN0ZWdvZmlsZSAgICAgICAgZWxlZ2lyIGFyY2hpdm8gc3RlZ28NCiAgIC1zZiA8bm9tYXJjaGl2bz4gICAgICBleHRyYWVyIGRhdG9zIGRlIDxub21hcmNoaXZvPg0KIC1wLCAtLXBhc3NwaHJhc2UgICAgICAgIGRlY2xhcmFyIHNhbHZvY29uZHVjdG8NCiAgIC1wIDxzYWx2b2NvbmR1Y3RvPiAgICB1c2FyIDxzYWx2b2NvbmR1Y3RvPiBwYXJhIGV4dGFlciBkYXRvcw0KIC14ZiwgLS1leHRyYWN0ZmlsZSAgICAgIGVsZWdpciBub21icmUgYXJjaGl2byBwYXJhIGxvcyBkYXRvcyBleHRyYe+/vWRvcw0KICAgLXhmIDxub21hcmNoaXZvPiAgICAgIGdyYWJhciBkYXRvcyBleHRyYe+/vWRvcyBlbiA8bm9tYXJjaGl2bz4NCiAtZiwgLS1mb3JjZSAgICAgICAgICAgICBzb2JyZWVzY3JpYmlyIGFyY2hpdm9zIGV4aXN0ZW50ZXMNCiAtcSwgLS1xdWlldCAgICAgICAgICAgICBldml0YXIgbG9zIG1lbnNhamVzIGluZm9ybWF0aXZvcw0KIC12LCAtLXZlcmJvc2UgICAgICAgICAgIHZlciBpbmZvcm1hY2nvv71uIGRldGFsbGFkYQ0KDQpvcGNpb25lcyBkZWwgY29tYW5kbyBpbmZvOg0KIC1wLCAtLXBhc3NwaHJhc2UgICAgICAgIGRlY2xhcmFyIHNhbHZvY29uZHVjdG8NCiAgIC1wIDxzYWx2b2NvbmR1Y3RvPiAgICB1c2FyIDxzYWx2b2NvbmR1Y3RvPiBwYXJhIG9idGVuZXIgaW5mb3JtYWNp77+9biBzb2JyZSBkYXRvcyBhZGp1bnRvcw0KDQpBZGp1bnRhciBhZGoudHh0IGVuIGN2ci5qcGc6IHN0ZWdoaWRlIGVtYmVkIC1jZiBjdnIuanBnIC1lZiBhZGoudHh0DQpFeHRyYWVyIGRhdG9zIGFkanVudG9zIGRlc2RlIHN0Zy5qcGc6IHN0ZWdoaWRlIGV4dHJhY3QgLXNmIHN0Zy5qcGcNCg=='),
(52, 'binwalk', ''),
(53, 'stegosolve', '');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `objetivos`
--

CREATE TABLE `objetivos` (
  `id_objetivo` int(11) NOT NULL,
  `ip_objetivo` varchar(100) NOT NULL,
  `dominio_objetivo` varchar(100) NOT NULL,
  `estado_objetivo` int(2) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Índices para tablas volcadas
--

--
-- Indices de la tabla `comandos`
--
ALTER TABLE `comandos`
  ADD PRIMARY KEY (`id_comando`),
  ADD KEY `id_fase` (`id_fase`),
  ADD KEY `id_herramienta` (`id_herramienta`);

--
-- Indices de la tabla `fases`
--
ALTER TABLE `fases`
  ADD PRIMARY KEY (`id_fase`);

--
-- Indices de la tabla `herramientas`
--
ALTER TABLE `herramientas`
  ADD PRIMARY KEY (`id_herramienta`);

--
-- Indices de la tabla `objetivos`
--
ALTER TABLE `objetivos`
  ADD PRIMARY KEY (`id_objetivo`);

--
-- AUTO_INCREMENT de las tablas volcadas
--

--
-- AUTO_INCREMENT de la tabla `comandos`
--
ALTER TABLE `comandos`
  MODIFY `id_comando` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=30;

--
-- AUTO_INCREMENT de la tabla `fases`
--
ALTER TABLE `fases`
  MODIFY `id_fase` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=420;

--
-- AUTO_INCREMENT de la tabla `herramientas`
--
ALTER TABLE `herramientas`
  MODIFY `id_herramienta` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=54;

--
-- AUTO_INCREMENT de la tabla `objetivos`
--
ALTER TABLE `objetivos`
  MODIFY `id_objetivo` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- Restricciones para tablas volcadas
--

--
-- Filtros para la tabla `comandos`
--
ALTER TABLE `comandos`
  ADD CONSTRAINT `comandos_ibfk_1` FOREIGN KEY (`id_fase`) REFERENCES `fases` (`id_fase`) ON UPDATE CASCADE,
  ADD CONSTRAINT `comandos_ibfk_2` FOREIGN KEY (`id_herramienta`) REFERENCES `herramientas` (`id_herramienta`) ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
